{"version":3,"sources":["components/labels.js","components/Sidebar.js","components/util.js","components/Timeline.js","components/Toolbar.js","components/VideoLabeler.js","reducer.js","components/Labeler.js","App.js","reportWebVitals.js","index.js"],"names":["LabelsDispatch","createContext","SidebarAgentsPresent","state","dispatch","useContext","className","agents","map","agent","SidebarAgentPresent","active","name","activeAgent","onActivate","type","checked","agentPresent","onChange","event","isPresent","currentTarget","flipped","agentFlipped","onFlip","isFlipped","Form","Check","id","label","display_name","SidebarAgentAnnotation","onClick","FormCheck","isBlurred","agentName","isObscured","SidebarAgentAnnotations","frames","activeFrame","Object","values","every","x","Sidebar","Col","md","lg","xl","getSrcForFrame","sampleData","replace","String","padStart","getComponentType","i","UpdatingPopover","forwardRef","ref","popper","children","props","show","useEffect","scheduleUpdate","Popover","body","Timeline","sample","components","useMemo","lastComponentType","componentLength","numFrames","componentType","push","useState","hoverPositionPercent","setHoverPositionPercent","wantsToNavigateToFrame","setWantsToNavigateToFrame","hoverPositionFrame","Math","min","floor","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","frame","onMouseMove","bounds","getBoundingClientRect","pct","clientX","width","max","preventDefault","onMouseLeave","OverlayTrigger","placement","overlay","src","data","alt","height","style","left","flexGrow","Toolbar","nextVideo","helpVisible","setHelpVisible","showDeleteSubsequentPrompt","setShowDeleteSubsequentPrompt","Navbar","Nav","Text","Spinner","animation","size","loading","Dropdown","Toggle","Menu","Item","ButtonGroup","disabled","dishMask","locked","verticalAlign","value","Card","border","transform","y","angle","matrix","DOMMatrix","cos","sin","multiplySelf","DISH_MASK","Symbol","VideoLabeler","preloadCanvas","setPreloadCanvas","image","setImage","element","document","createElement","imageLoaded","addEventListener","removeEventListener","dishMaskLocation","naturalWidth","naturalHeight","radius","canvas","setCanvas","getContext","save","ctx","restore","fillStyle","fillRect","beginPath","arc","PI","clip","getAgentLocation","useCallback","Error","console","assert","agentLabel","eventToImageCoordinates","nativeEvent","offsetX","clientHeight","offsetY","clientWidth","setTransform","drawImage","lineWidth","strokeStyle","shape","shapeX","shapeY","lineTo","stroke","fill","activeAgentLabel","Image","drag","setDrag","startDrag","mouse","getHoveredAgent","agentPos","xTranslated","yTranslated","xRotated","yRotated","point_in_polygon","isDishMaskHovered","mouseX","mouseY","dishX","dishY","isDragging","onMouseDown","hoveredAgent","onMouseUp","xDelta","yDelta","onWheel","agentToScroll","deltaY","shiftKey","by","updateFrame","changes","reducer","action","current","presentAgentNames","keys","filter","length","idx","indexOf","stepAdvanceDispatch","reverse","stepRetreatDispatch","fromEntries","entries","frame_num","defaultState","NO_MATCH","Labeler","useReducer","setSample","subscription","Labelbox","currentAsset","subscribe","a","url","fetch","response","text","parseInt","parsedState","JSON","parse","log","unsubscribe","listener","ret","key","hasSample","setLabelForAsset","stringify","catch","err","error","Container","fluid","Row","Provider","fetchNextAssetToLabel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71806bd7.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\nexport const LabelsDispatch = createContext({})","import { Col, Form, FormCheck } from \"react-bootstrap\"\n\nimport agents from \"../agents.json\"\nimport { useContext } from \"react\"\nimport { LabelsDispatch } from \"./labels\"\n\nimport \"./Sidebar.css\"\n\nfunction SidebarAgentsPresent({ state }) {\n    const dispatch = useContext(LabelsDispatch)\n    if (!dispatch) return null\n\n    return <div>\n        <h4 className=\"text-center mt-3\">Agents Present</h4>\n        <p className=\"small text-secondary text-center\">Applies to the entire video</p>\n\n        <ol className=\"list-unstyled m-3\">\n            {agents.map(agent => (\n                <SidebarAgentPresent\n                    key={agent.name}\n                    agent={agent}\n                    active={agent.name === state.activeAgent}\n                    onActivate={() => dispatch({\n                        type: 'set_active_agent',\n                        activeAgent: agent.name\n                    })}\n                    checked={state.agentPresent?.[agent.name] ?? false}\n                    onChange={event => dispatch({\n                        type: 'set_agent_present',\n                        agent: agent.name,\n                        isPresent: event.currentTarget.checked\n                    })}\n                    flipped={state.agentFlipped?.[agent.name] ?? false}\n                    onFlip={event => dispatch({\n                        type: 'set_agent_flipped',\n                        agent: agent.name,\n                        isFlipped: event.currentTarget.checked\n                    })}\n                />\n            ))}\n        </ol>\n    </div>\n}\n\nfunction SidebarAgentPresent({ agent, checked, onChange, flipped, onFlip }) {\n    return (<li>\n        <Form.Check\n            type=\"checkbox\"\n            id={agent.name + \"-active\"}\n            label={agent.display_name}\n            checked={checked}\n            onChange={onChange}\n        />\n        <Form.Check\n            className=\"indented-checkbox\"\n            type=\"checkbox\"\n            id={agent.name + \"-flip\"}\n            label=\"Flip\"\n            checked={flipped}\n            onChange={onFlip}\n        />\n    </li>)\n}\n\nfunction SidebarAgentAnnotation({ state, agent, label }) {\n    const dispatch = useContext(LabelsDispatch)\n    if (!dispatch) return null\n\n    return <li\n        className={\"list-group-item py-2 px-3 \" + (state.activeAgent === agent.name ? 'active' : '')}\n        onClick={() => dispatch({ type: 'set_active_agent', activeAgent: agent.name })}\n    >\n        {agent.display_name}\n        <Form>\n            <FormCheck\n                id={`agent-${agent.name}-blurred`}\n                label={\"Blurred\"}\n                checked={label?.isBlurred ?? false}\n                onChange={event => dispatch({\n                    type: 'set_agent_is_blurred',\n                    agentName: agent.name,\n                    isBlurred: event.currentTarget.checked\n                })}\n            />\n            <FormCheck\n                id={`agent-${agent.name}-obscured`}\n                label={\"Obscured\"}\n                checked={label?.isObscured ?? false}\n                onChange={event => dispatch({\n                    type: 'set_agent_is_obscured',\n                    agentName: agent.name,\n                    isObscured: event.currentTarget.checked\n                })}\n            />\n        </Form>\n    </li>\n}\n\nfunction SidebarAgentAnnotations({ state }) {\n    return <div className=\"flex-grow-1\">\n        <h4 className=\"text-center mt-3\">Agent Annotations</h4>\n        <p className=\"small text-secondary text-center\">Applies to the current frame</p>\n\n        <ul className=\"list-group list-group-flush\">\n            {agents.map(agent =>\n                state.agentPresent?.[agent.name] &&\n                <SidebarAgentAnnotation\n                    key={agent.name}\n                    state={state}\n                    agent={agent}\n                    label={state.frames?.[state.activeFrame]?.[agent.name]}\n                />\n            )}\n        </ul>\n        {Object.values(state.agentPresent).every(x => !x) && <p className=\"text-center mx-2\">\n            Use the checkboxes below to select the agents that are present in this video\n        </p>}\n    </div>\n}\n\nexport function Sidebar({ state }) {\n\n    return (<Col md={4} lg={3} xl={2} className=\"bg-light h-100 border-end border-dark d-flex flex-column gx-0\">\n        <SidebarAgentAnnotations state={state} />\n        <SidebarAgentsPresent state={state} />\n    </Col>)\n}","export function getSrcForFrame(sampleData, activeFrame) {\n    if (!sampleData) return \"\"\n    return sampleData.replace(\".mp4\", `/${String(activeFrame).padStart(3, '0')}.jpg`)\n}","import { forwardRef, useContext, useEffect, useMemo, useState } from \"react\"\n\nimport \"./Timeline.css\"\nimport { Button, Modal, OverlayTrigger, Popover } from \"react-bootstrap\"\nimport { getSrcForFrame } from \"./util\"\nimport { LabelsDispatch } from \"./labels\"\n\nfunction getComponentType(state, i) {\n    if (i === state.activeFrame) return 'active'\n    return state.frames?.[i] ? 'labeled' : 'unlabeled'\n}\n\n// The shell of this component is copied straight from react-bootstrap documentation\nconst UpdatingPopover = forwardRef(\n    ({ popper, children, show: _, ...props }, ref) => {\n        useEffect(() => {\n            popper.scheduleUpdate()\n        }, [children, popper])\n\n        return (\n            <Popover ref={ref} body {...props}>\n                {children}\n            </Popover>\n        )\n    },\n)\n\n\nexport function Timeline({ sample, state }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    const components = useMemo(() => {\n        const components = []\n        let lastComponentType = null\n        let componentLength = 0\n        for (let i = 1; i <= sample.numFrames; i++) {\n            const componentType = getComponentType(state, i)\n            if (componentType !== lastComponentType && lastComponentType !== null) {\n                components.push({ componentType: lastComponentType, componentLength })\n                componentLength = 0\n            }\n            componentLength += 1\n            lastComponentType = componentType\n        }\n\n        if (componentLength !== 0) {\n            components.push({ componentType: lastComponentType, componentLength })\n        }\n        return components\n    }, [sample.numFrames, state])\n\n    const [hoverPositionPercent, setHoverPositionPercent] = useState(null)\n    const [wantsToNavigateToFrame, setWantsToNavigateToFrame] = useState(null)\n\n    function onMouseMove(event) {\n        const bounds = event.currentTarget.getBoundingClientRect()\n        const pct = (event.clientX - bounds.x) / bounds.width\n\n        // Clamp to [0, 1]\n        setHoverPositionPercent(Math.max(0, Math.min(pct, 1)))\n        event.preventDefault()\n    }\n\n    function onMouseLeave() {\n        setHoverPositionPercent(null)\n    }\n\n    // This floor operation could return the `sample.numFrames`th frame, which doesn't exist\n    const hoverPositionFrame = hoverPositionPercent === null ? null :\n        Math.min(Math.floor(hoverPositionPercent * sample.numFrames), sample.numFrames - 1)\n\n    function onClick() {\n        setWantsToNavigateToFrame(hoverPositionFrame)\n    }\n\n    // This noinspection is because WebStorm thinks all arguments to OverlayTrigger are required, but most are optional\n    // noinspection RequiredAttributes\n    return (<>\n        <Modal show={wantsToNavigateToFrame !== null} onHide={() => setWantsToNavigateToFrame(null)}>\n            <Modal.Header closeButton>\n                <Modal.Title>Jump to frame {wantsToNavigateToFrame}?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>\n                    You will automatically start annotating at this position. Removing annotations is not yet supported,\n                    so be sure this is the frame you want.\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => setWantsToNavigateToFrame(null)} variant=\"secondary\">Cancel</Button>\n                <Button onClick={() => {\n                    dispatch({ type: 'jump_to_frame', frame: wantsToNavigateToFrame })\n                    setWantsToNavigateToFrame(null)\n                }}\n                        variant=\"primary\">Jump to frame</Button>\n            </Modal.Footer>\n        </Modal>\n\n        <div className=\"timeline\"\n                 onMouseMove={onMouseMove}\n                 onMouseLeave={onMouseLeave}\n                 onClick={onClick}>\n\n            {hoverPositionFrame !== null && <OverlayTrigger show={true} placement={'top'} overlay={\n                <UpdatingPopover className=\"p-0\">\n                    <img\n                        src={getSrcForFrame(sample.data, hoverPositionFrame)}\n                        alt={`Frame ${hoverPositionFrame}`}\n                        height={180}\n                    />\n                </UpdatingPopover>\n            }>\n                <div className=\"timeline-cursor\" style={{\n                    width: `min(2px, ${100 / sample.numFrames}%)`,\n                    left: `${100 * hoverPositionFrame / sample.numFrames}%`,\n                }} />\n            </OverlayTrigger>}\n            {components.map(({ componentType, componentLength }, i) => (\n                <div key={i}\n                     className={`timeline-component timeline-component-${componentType}`}\n                     style={{ flexGrow: componentLength }} />\n            ))}\n        </div>\n    </>)\n}","import { useContext, useState } from \"react\"\nimport { LabelsDispatch } from \"./labels\"\nimport { Button, ButtonGroup, Card, Dropdown, Modal, Nav, Navbar, Spinner } from \"react-bootstrap\"\nimport { AiFillStepForward, AiFillStepBackward } from \"react-icons/ai\"\nimport { BiHelpCircle } from \"react-icons/bi\"\nimport { CgCloseR } from \"react-icons/cg\"\nimport { ImLock, ImUnlocked } from \"react-icons/im\"\n\nexport function Toolbar({ sample, state, nextVideo }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    const [helpVisible, setHelpVisible] = useState(false)\n    const [showDeleteSubsequentPrompt, setShowDeleteSubsequentPrompt] = useState(false)\n    return (<>\n        <Navbar className=\"d-flex justify-content-between\">\n            {/* Left */}\n            <Nav>\n                <Navbar.Text className=\"me-2\">\n                    <Spinner animation=\"border\" size=\"sm\" className={`me-2 ${state.loading ? 'visible' : 'invisible'}`} />\n                    Frame {state.activeFrame} of {sample.numFrames}\n                </Navbar.Text>\n\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"danger\">\n                        Delete\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item\n                            onClick={() => setShowDeleteSubsequentPrompt(true)}\n                        >\n                            Delete annotations after this frame\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </Nav>\n\n            {/* Center */}\n            <Nav>\n                <ButtonGroup>\n                    <Button\n                        onClick={() => dispatch({ type: 'previous_frame' })}\n                        disabled={state.activeFrame <= 1}\n                    ><AiFillStepBackward /></Button>\n                    <Button\n                        onClick={() => dispatch({ type: 'next_frame' })}\n                        disabled={state.activeFrame >= sample.numFrames}\n                    ><AiFillStepForward /></Button>\n                </ButtonGroup>\n            </Nav>\n\n            {/* Right */}\n            <Nav>\n                <Dropdown>\n                    <Dropdown.Toggle>\n                        {state.dishMask?.locked ?\n                            <ImLock style={{ verticalAlign: \"text-top\" }} /> :\n                            <ImUnlocked style={{ verticalAlign: \"text-top\" }} />} Dish mask\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        {state.dishMask?.locked && <Dropdown.Item\n                            onClick={() => dispatch({ type: 'set_dish_mask_locked', value: false })}\n                        >Unlock</Dropdown.Item>}\n                        {!state.dishMask?.locked && <Dropdown.Item\n                            onClick={() => dispatch({ type: 'set_dish_mask_locked', value: true })}\n                        >Lock</Dropdown.Item>}\n\n                        <Dropdown.Item onClick={() => dispatch({ type: 'reset_dish_mask' })}>Reset to center</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <Button\n                    className=\"mx-2\"\n                    variant={helpVisible ? \"info\" : \"outline-info\"}\n                    onClick={() => setHelpVisible(!helpVisible)}\n                ><BiHelpCircle /></Button>\n\n                <Button onClick={nextVideo}>Next video</Button>\n            </Nav>\n        </Navbar>\n\n        {helpVisible && <Card border=\"info\" className=\"mb-2\">\n            <Card.Header>\n                <button className=\"float-end border-0\" onClick={() => setHelpVisible(!helpVisible)}>\n                    <CgCloseR />\n                </button>\n                Help\n            </Card.Header>\n            <Card.Body className=\"row\">\n                <dl className=\"col mb-0\">\n                    <dt>Space</dt>\n                    <dd>Advance through agents and frames</dd>\n                    <dt>b</dt>\n                    <dd>Reverse through agents and frames</dd>\n                </dl>\n                <dl className=\"col mb-0\">\n                    <dt>q/e/scroll</dt>\n                    <dd>Rotate selected agent</dd>\n                    <dt>w/a/s/d/drag</dt>\n                    <dd>Move selected agent</dd>\n                </dl>\n                <dl className=\"col mb-0\">\n                    <dt>Shift</dt>\n                    <dd>Rotate/move by 10x</dd>\n                </dl>\n            </Card.Body>\n        </Card>}\n\n        <Modal show={showDeleteSubsequentPrompt} onHide={() => setShowDeleteSubsequentPrompt(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>Delete annotations after frame {state.activeFrame}?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>\n                    This action cannot be undone.\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => setShowDeleteSubsequentPrompt(false)} variant=\"secondary\">Cancel</Button>\n                <Button onClick={() => {\n                    dispatch({ type: 'delete_annotations_after_frame', frame: state.activeFrame })\n                    setShowDeleteSubsequentPrompt(false)\n                }}\n                        variant=\"danger\">Delete</Button>\n            </Modal.Footer>\n        </Modal>\n    </>)\n}","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { Col } from \"react-bootstrap\"\nimport point_in_polygon from \"robust-point-in-polygon\"\n\nimport agents from \"../agents.json\"\n\nimport './VideoLabeler.css'\nimport { LabelsDispatch } from \"./labels\"\nimport { Timeline } from \"./Timeline\"\nimport { Toolbar } from \"./Toolbar\"\nimport { getSrcForFrame } from \"./util\"\n\nfunction transform(x, y, angle, flipped) {\n    const matrix = new DOMMatrix([\n        Math.cos(angle), -Math.sin(angle),\n        Math.sin(angle), Math.cos(angle),\n        x, y\n    ])\n    if (flipped) {\n        matrix.multiplySelf(new DOMMatrix([\n            1, 0,\n            0, -1,\n            0, 0,\n        ]))\n    }\n    return matrix\n}\n\nconst DISH_MASK = Symbol('DISH_MASK')\n\nexport function VideoLabeler({ sample, state, nextVideo }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    /** @type {React.MutableRefObject<HTMLCanvasElement>} */\n    const [preloadCanvas, setPreloadCanvas] = useState(null)\n    const [image, setImage] = useState(null)\n    useEffect(() => {\n        const element = document.createElement('img')\n\n        function imageLoaded() {\n            setImage(element)\n            dispatch({ type: 'set_loading_finished' })\n        }\n\n        element.addEventListener('load', imageLoaded)\n        element.src = getSrcForFrame(sample.data, state.activeFrame)\n\n        // The element will be garbage collected as long as this event listener isn't around creating a cycle\n        return () => element.removeEventListener('load', imageLoaded)\n    }, [dispatch, sample.data, state.activeFrame])\n\n    const dishMaskLocation = useMemo(() => {\n        if (!image) return null\n\n        const x = state.dishMask?.x ?? image.naturalWidth / 2\n        const y = state.dishMask?.y ?? image.naturalHeight / 2\n        const radius = state.dishMask?.radius ?? 500\n\n        return { x, y, radius }\n    }, [image, state])\n\n    const [canvas, setCanvas] = useState(null)\n    useEffect(() => {\n        if (preloadCanvas && image) {\n            preloadCanvas.width = image.naturalWidth\n            preloadCanvas.height = image.naturalHeight\n\n            preloadCanvas.getContext('2d').save()\n\n            setCanvas(preloadCanvas)\n        }\n    }, [preloadCanvas, image])\n\n    useEffect(() => {\n        if (!canvas) return\n        if (!dishMaskLocation) return\n\n        const ctx = canvas.getContext('2d')\n\n        ctx.restore()\n        ctx.save()\n\n        ctx.fillStyle = \"black\"\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n        ctx.beginPath()\n        const { x, y, radius } = dishMaskLocation\n        ctx.arc(x, y, radius, 0, Math.PI * 2)\n        ctx.clip()\n    }, [canvas, dishMaskLocation])\n\n\n    const getAgentLocation = useCallback(function (state, agent) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        if (agent === DISH_MASK) {\n            return dishMaskLocation\n        }\n\n        console.assert(typeof agent === \"string\")\n\n        const agentLabel = state.frames[state.activeFrame]?.[agent] ?? {}\n        const x = agentLabel.x ?? canvas.width / 2\n        const y = agentLabel.y ?? canvas.height / 2\n        const angle = agentLabel.angle ?? 0\n\n        return { x, y, angle }\n    }, [canvas, dishMaskLocation])\n\n    useEffect(() => {\n        if (!canvas) return\n        if (!image) return\n\n        const ctx = canvas.getContext('2d')\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\n\n        ctx.drawImage(image, 0, 0)\n\n        ctx.lineWidth = 2\n\n        for (const agent of agents) {\n            if (!state.agentPresent[agent.name]) continue\n\n            if (agent.name === state.activeAgent) {\n                ctx.strokeStyle = 'red'\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.2)'\n            } else {\n                ctx.strokeStyle = 'darkgrey'\n                ctx.fillStyle = 'rgba(0,0,0,0.2)'\n            }\n            const { x, y, angle } = getAgentLocation(state, agent.name)\n            const flipped = state.agentFlipped?.[agent.name]\n\n            ctx.setTransform(transform(x, y, angle, flipped))\n            ctx.beginPath()\n            for (const [shapeX, shapeY] of agent.shape) {\n                ctx.lineTo(shapeX, shapeY)\n            }\n            ctx.stroke()\n            ctx.fill()\n        }\n    }, [canvas, getAgentLocation, image, state])\n\n    useEffect(() => {\n        const activeAgentLabel = state.frames[state.activeFrame]?.[state.activeAgent] ?? {}\n\n        if (dispatch && image && (\n            typeof activeAgentLabel.x === \"undefined\" ||\n            typeof activeAgentLabel.y === \"undefined\")\n        ) {\n            dispatch({\n                type: 'set_agent_position',\n                agentName: state.activeAgent,\n                x: activeAgentLabel.x ?? image.naturalWidth / 2,\n                y: activeAgentLabel.y ?? image.naturalHeight / 2,\n            })\n        }\n    }, [dispatch, state, image])\n\n    // Preload next 3 frames\n    useEffect(() => {\n        new Image().src = getSrcForFrame(sample.data, state.activeFrame + 1)\n        new Image().src = getSrcForFrame(sample.data, state.activeFrame + 2)\n        new Image().src = getSrcForFrame(sample.data, state.activeFrame + 3)\n    }, [sample.data, state.activeFrame])\n\n    function eventToImageCoordinates(event) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        const x = event.nativeEvent.offsetX * (canvas.height / canvas.clientHeight)\n        const y = event.nativeEvent.offsetY * (canvas.width / canvas.clientWidth)\n\n        return { x, y }\n    }\n\n    const [drag, setDrag] = useState(null)\n\n    function startDrag(x, y, agentName) {\n        if (!agentName) return\n\n        setDrag({\n            agentName,\n            mouse: { x, y },\n            agent: getAgentLocation(state, agentName)\n        })\n    }\n\n    function endDrag() {\n        setDrag(null)\n    }\n\n    function getHoveredAgent(x, y) {\n        for (const agent of agents) {\n            if (!state.agentPresent[agent.name]) continue\n\n            const agentPos = getAgentLocation(state, agent.name)\n            const xTranslated = x - agentPos.x\n            const yTranslated = y - agentPos.y\n            const xRotated = xTranslated * Math.cos(-agentPos.angle) + yTranslated * Math.sin(-agentPos.angle)\n            const yRotated = -xTranslated * Math.sin(-agentPos.angle) + yTranslated * Math.cos(-agentPos.angle)\n\n            if (point_in_polygon(agent.shape, [xRotated, yRotated]) <= 0) {\n                return agent.name\n            }\n        }\n\n        return null\n    }\n\n    function isDishMaskHovered(mouseX, mouseY) {\n        if (state.dishMask?.locked) return false\n        const { x: dishX, y: dishY, radius } = dishMaskLocation\n        const dist_sqr = (mouseX - dishX) ** 2 + (mouseY - dishY) ** 2\n        return dist_sqr > radius ** 2\n    }\n\n    function onCanvasMousedown(event) {\n        const { x, y } = eventToImageCoordinates(event)\n        if (isDishMaskHovered(x, y)) {\n            startDrag(x, y, DISH_MASK)\n            return\n        }\n\n        const hoveredAgent = getHoveredAgent(x, y)\n        if (hoveredAgent) {\n            dispatch({\n                type: 'set_active_agent',\n                activeAgent: hoveredAgent\n            })\n        }\n        startDrag(x, y, hoveredAgent ?? state.activeAgent)\n    }\n\n    function isDragging() {\n        return drag && (drag.agentName === state.activeAgent || drag.agentName === DISH_MASK)\n    }\n\n    function onCanvasMousemove(event) {\n        if (isDragging()) {\n            const xDelta = event.nativeEvent.offsetX * (canvas.height / canvas.clientHeight) - drag.mouse.x\n            const yDelta = event.nativeEvent.offsetY * (canvas.width / canvas.clientWidth) - drag.mouse.y\n\n            if (drag.agentName === DISH_MASK) {\n                dispatch({\n                    type: 'set_dish_mask_position',\n                    x: xDelta + drag.agent.x,\n                    y: yDelta + drag.agent.y,\n                })\n            } else {\n                dispatch({\n                    type: 'set_agent_position',\n                    agentName: drag.agentName,\n                    x: xDelta + drag.agent.x,\n                    y: yDelta + drag.agent.y,\n                })\n            }\n        }\n    }\n\n    function agentToScroll(x, y) {\n        // If dragging, rotate the agent being dragged. Otherwise, rotate the hovered agent (or dish). Otherwise,\n        // scroll the selected agent\n\n        if (isDragging()) return drag.agentName\n\n        if (isDishMaskHovered(x, y)) return DISH_MASK\n\n        return getHoveredAgent(x, y) ?? state.activeAgent\n    }\n\n    function onCanvasWheel(event) {\n        const { x, y } = eventToImageCoordinates(event)\n\n        const agentName = agentToScroll(x, y)\n\n        if (agentName === DISH_MASK) {\n            const { radius } = dishMaskLocation\n            dispatch({\n                type: 'set_dish_mask_radius',\n                radius: Math.max(10, radius + event.deltaY / (event.shiftKey ? 10 : 100)),\n            })\n        } else if (agentName) {\n            if (agentName !== state.activeAgent) {\n                dispatch({\n                    type: 'set_active_agent',\n                    activeAgent: agentName\n                })\n            }\n\n            dispatch({\n                type: 'rotate_agent',\n                agentName,\n                by: event.deltaY / (event.shiftKey ? 1000 : 10000),\n            })\n        }\n    }\n\n    return (<Col className=\"h-100 d-flex flex-column\">\n        <Toolbar sample={sample} state={state} nextVideo={nextVideo} />\n        <div className=\"labeler-canvas-container\">\n            <canvas\n                className=\"labeler-canvas\"\n                ref={setPreloadCanvas}\n                onMouseDown={onCanvasMousedown}\n                onMouseUp={endDrag}\n                onMouseMove={onCanvasMousemove}\n                onWheel={onCanvasWheel}\n            />\n            <Timeline sample={sample} state={state} />\n        </div>\n    </Col>)\n}","function updateFrame(state, agent, changes) {\n    if (!agent) return state\n    if (typeof changes === \"function\") {\n        changes = changes(state.frames[state.activeFrame]?.[agent] ?? {})\n    }\n    return {\n        ...state,\n        frames: {\n            ...state.frames,\n            [state.activeFrame]: {\n                ...state.frames[state.activeFrame],\n                [agent]: {\n                    ...state.frames[state.activeFrame]?.[agent] ?? {},\n                    ...changes\n                }\n            }\n        }\n    }\n}\n\nfunction normalizeAngle(angle) {\n    return angle % (Math.PI * 2)\n}\n\nfunction stepAdvanceDispatch(state) {\n    const presentAgentNames = Object.keys(state.agentPresent).filter(agentName => state.agentPresent[agentName])\n\n    // First, if there is no active agent, try to activate the first present agent\n    if (!state.activeAgent) {\n        if (presentAgentNames.length > 0) {\n            return { type: 'set_active_agent', activeAgent: presentAgentNames[0] }\n        } else {\n            // If there aren't any present agents, just go to the next frame\n            return { type: 'next_frame' }\n        }\n    }\n\n    // Try to activate the next present agent\n    const idx = presentAgentNames.indexOf(state.activeAgent)\n    if (idx < 0) {\n        throw new Error(\"Current agent is not present\")\n    } else if (idx + 1 < presentAgentNames.length) {\n        return { type: 'set_active_agent', activeAgent: presentAgentNames[idx + 1] }\n    }\n\n    // If nothing else worked, advance the frame and reset the agent\n    return { type: 'advance_frame_and_set_agent', activeAgent: presentAgentNames[0] }\n}\n\nfunction stepRetreatDispatch(state) {\n    const presentAgentNames = Object.keys(state.agentPresent).filter(agentName => state.agentPresent[agentName]).reverse()\n\n    // First, if there is no active agent, try to activate the first present agent\n    if (!state.activeAgent) {\n        if (presentAgentNames.length > 0) {\n            return { type: 'set_active_agent', activeAgent: presentAgentNames[0] }\n        }\n        throw new Error(\"Tried to retreat when no agents were active\")\n    }\n\n    // Try to activate the next present agent\n    const idx = presentAgentNames.indexOf(state.activeAgent)\n    if (idx < 0) {\n        throw new Error(\"Current agent is not present\")\n    } else if (idx + 1 < presentAgentNames.length) {\n        return { type: 'set_active_agent', activeAgent: presentAgentNames[idx + 1] }\n    }\n\n    // If nothing else worked, advance the frame and reset the agent\n    return { type: 'retreat_frame_and_set_agent', activeAgent: presentAgentNames[0] }\n}\n\nexport default function reducer(state, action) {\n    switch (action.type) {\n        case 'set_state':\n            // If the new state is for the same sample as the old state, don't overwrite. Otherwise, overwrite.\n            return action.state.data === state.data ? state : action.state\n        case 'set_loading_finished':\n            return { ...state, loading: false }\n        case 'set_active_agent':\n            return { ...state, activeAgent: action.activeAgent }\n        case 'set_agent_present':\n            return { ...state, agentPresent: { ...state.agentPresent, [action.agent]: action.isPresent } }\n        case 'set_agent_flipped':\n            return { ...state, agentFlipped: { ...state.agentFlipped, [action.agent]: action.isFlipped } }\n        case 'active_agent_toggle_present':\n            return {\n                ...state,\n                agentPresent: { ...state.agentPresent, [state.activeAgent]: !state.agentPresent[state.activeAgent] }\n            }\n        case 'set_agent_position':\n            return updateFrame(state, action.agentName, { x: action.x, y: action.y })\n        case 'rotate_agent':\n            return updateFrame(state, action.agentName, agent => ({\n                angle: normalizeAngle((agent.angle || 0) + action.by)\n            }))\n        case 'rotate_active_agent':\n            return reducer(state, { type: 'rotate_agent', agentName: state.activeAgent, by: action.by})\n        case 'move_agent':\n            return updateFrame(state, action.agentName, agent => ({\n                x: (agent.x || 0) + (action.x || 0),\n                y: (agent.y || 0) + (action.y || 0),\n            }))\n        case 'move_active_agent':\n            return reducer(state, { type: 'move_agent', agentName: state.activeAgent, x: action.x, y: action.y })\n        case 'next_frame':\n            if (state.loading) return state\n            return {\n                ...state,\n                loading: true,\n                activeFrame: state.activeFrame + 1,\n                frames: {\n                    ...state.frames,\n                    [state.activeFrame + 1]: state.frames[state.activeFrame + 1] ?? state.frames[state.activeFrame],\n                }\n            }\n        case 'previous_frame':\n            return {\n                ...state,\n                loading: true,\n                activeFrame: state.activeFrame > 1 ? state.activeFrame - 1 : state.activeFrame\n            }\n        case 'jump_to_frame':\n            return {\n                ...state,\n                loading: true,\n                activeFrame: action.frame\n            }\n        case 'set_agent_is_blurred':\n            return updateFrame(state, action.agentName, { isBlurred: action.isBlurred })\n        case 'toggle_active_agent_is_blurred':\n            return updateFrame(state, state.activeAgent, current => ({ isBlurred: !current.isBlurred }))\n        case 'set_agent_is_obscured':\n            return updateFrame(state, action.agentName, { isObscured: action.isObscured })\n        case 'toggle_active_agent_is_obscured':\n            return updateFrame(state, state.activeAgent, current => ({ isObscured: !current.isObscured }))\n        case 'step_advance':\n            return reducer(state, stepAdvanceDispatch(state))\n        case 'step_retreat':\n            return reducer(state, stepRetreatDispatch(state))\n        case 'advance_frame_and_set_agent':\n            if (state.loading) return state\n            return reducer(\n                reducer(state, { type: 'next_frame' }),\n                { type: 'set_active_agent', activeAgent: action.activeAgent })\n        case 'retreat_frame_and_set_agent':\n            if (state.loading) return state\n            return reducer(\n                reducer(state, { type: 'previous_frame' }),\n                { type: 'set_active_agent', activeAgent: action.activeAgent })\n        case 'set_dish_mask_position':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    x: action.x,\n                    y: action.y,\n                }\n            }\n        case 'set_dish_mask_radius':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    radius: action.radius,\n                }\n            }\n        case 'reset_dish_mask':\n            return {\n                ...state,\n                dishMask: null\n            }\n\n        case 'set_dish_mask_locked':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    locked: action.value\n                }\n            }\n        case 'delete_annotations_after_frame':\n            return {\n                ...state,\n                frames: Object.fromEntries(\n                    Object.entries(state.frames)\n                        .filter(([frame_num, _]) => frame_num <= action.frame)\n                )\n            }\n\n        default:\n            throw new Error(\"Unknown reducer action\")\n    }\n}","import Labelbox from '@labelbox/labeling-api'\nimport { useEffect, useReducer, useState } from \"react\"\nimport { Container, Row } from \"react-bootstrap\"\nimport { Sidebar } from \"./Sidebar\"\nimport { VideoLabeler } from \"./VideoLabeler\"\nimport reducer from \"../reducer\"\nimport { LabelsDispatch } from \"./labels\"\n\nconst defaultState = {\n    loading: true,\n    activeFrame: 1,\n    activeAgent: null,\n    agentPresent: {},\n    frames: {}\n}\n\nconst NO_MATCH = Symbol(\"NO_MATCH\")\n\nexport default function Labeler() {\n    const [state, dispatch] = useReducer(reducer, defaultState, i => i)\n\n    const [sample, setSample] = useState(null)\n    useEffect(() => {\n        const subscription = Labelbox.currentAsset().subscribe(async sample => {\n            if (sample) {\n                const url = sample.data.replace(\".mp4\", \"/num_frames.txt\")\n\n                const response = await fetch(url)\n                const text = await response.text()\n                sample.numFrames = parseInt(text, 10)\n\n                const parsedState = sample.label ? JSON.parse(sample.label) : defaultState\n                parsedState.data = sample.data\n                console.log(\"Restoring \", parsedState)\n                dispatch({ type: 'set_state', state: parsedState })\n            }\n\n            setSample(sample)\n        })\n\n        return () => subscription.unsubscribe()\n    }, [])\n\n    useEffect(() => {\n        function listener(event) {\n            const ret = (() => {\n                switch (event.key) {\n                    // Changing frames\n                    case ' ':\n                        return dispatch({ type: 'step_advance' })\n                    case 'b':\n                        return dispatch({ type: 'step_retreat' })\n\n                    // Setting quality\n                    case 'r':\n                        return dispatch({ type: 'toggle_active_agent_is_blurred' })\n                    case 'f':\n                        return dispatch({ type: 'toggle_active_agent_is_obscured' })\n\n                    // Rotating\n                    case 'q':\n                        return dispatch({ type: 'rotate_active_agent', by: 0.01 })\n                    case 'Q':\n                        return dispatch({ type: 'rotate_active_agent', by: 0.1 })\n                    case 'e':\n                        return dispatch({ type: 'rotate_active_agent', by: -0.01 })\n                    case 'E':\n                        return dispatch({ type: 'rotate_active_agent', by: -0.1 })\n\n                    // Translating\n                    case 'w':\n                        return dispatch({ type: 'move_active_agent', y: -1 })\n                    case 'W':\n                        return dispatch({ type: 'move_active_agent', y: -10 })\n                    case 'a':\n                        return dispatch({ type: 'move_active_agent', x: -1 })\n                    case 'A':\n                        return dispatch({ type: 'move_active_agent', x: -10 })\n                    case 's':\n                        return dispatch({ type: 'move_active_agent', y: 1 })\n                    case 'S':\n                        return dispatch({ type: 'move_active_agent', y: 10 })\n                    case 'd':\n                        return dispatch({ type: 'move_active_agent', x: 1 })\n                    case 'D':\n                        return dispatch({ type: 'move_active_agent', x: 10 })\n\n                    default:\n                        break\n                }\n                return NO_MATCH\n            })()\n            if (ret !== NO_MATCH) event.preventDefault()\n            return ret\n        }\n\n        document.addEventListener('keypress', listener)\n        return () => document.removeEventListener('keypress', listener)\n    }, [])\n\n    // Save on every frame change\n    const hasSample = !!sample\n    useEffect(() => {\n        if (!hasSample) return\n        Labelbox.setLabelForAsset(JSON.stringify(state)).catch(err => {\n            console.error(err)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hasSample, state.activeFrame])\n\n    function nextVideo() {\n        Labelbox.fetchNextAssetToLabel().catch(err => {\n            console.error(err)\n        })\n    }\n\n    if (!sample) return (<p>Loading&hellip;</p>)\n\n    return (<Container fluid className=\"h-100\">\n        <Row className=\"h-100\">\n            <LabelsDispatch.Provider value={dispatch}>\n                <Sidebar state={state} />\n                <VideoLabeler sample={sample} state={state} nextVideo={nextVideo} />\n            </LabelsDispatch.Provider>\n        </Row>\n    </Container>)\n}","import Labeler from \"./components/Labeler\"\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Labeler />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}