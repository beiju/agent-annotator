{"version":3,"sources":["components/labels.js","components/Sidebar.js","components/util.js","components/Timeline.js","components/Toolbar.js","components/VideoLabeler.js","reducer.js","components/Labeler.js","App.js","reportWebVitals.js","index.js"],"names":["LabelsDispatch","createContext","SidebarAgentsPresent","state","useContext","className","value","SidebarAgentAnnotation","agent","label","dispatch","activeAgent","name","onClick","type","display_name","Form","FormCheck","id","checked","isBlurred","onChange","event","agentName","currentTarget","isObscured","SidebarAgentAnnotations","agents","map","agentPresent","frames","activeFrame","Object","values","every","x","Sidebar","Col","md","lg","xl","apiBaseUrl","getSrcForFrame","sampleId","getComponentType","i","UpdatingPopover","forwardRef","ref","popper","children","props","show","useEffect","scheduleUpdate","Popover","body","Timeline","sample","components","useMemo","lastComponentType","componentLength","numFrames","componentType","push","useState","hoverPositionPercent","setHoverPositionPercent","wantsToNavigateToFrame","setWantsToNavigateToFrame","hoverPositionFrame","Math","min","floor","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","frame","onMouseMove","bounds","getBoundingClientRect","pct","clientX","width","max","preventDefault","onMouseLeave","OverlayTrigger","placement","overlay","src","alt","height","style","left","flexGrow","Toolbar","returnToIndex","helpVisible","setHelpVisible","Navbar","Nav","Text","Spinner","animation","size","loading","ButtonGroup","disabled","sampleRate","Dropdown","Toggle","dishMask","locked","verticalAlign","Menu","Item","Card","border","transform","y","angle","flipped","matrix","DOMMatrix","cos","sin","multiplySelf","DISH_MASK","Symbol","VideoLabeler","preloadCanvas","setPreloadCanvas","image","setImage","element","document","createElement","imageLoaded","addEventListener","removeEventListener","dishMaskLocation","naturalWidth","naturalHeight","radius","canvas","setCanvas","getContext","save","ctx","restore","fillStyle","fillRect","beginPath","arc","PI","clip","getAgentLocation","useCallback","Error","console","assert","agentLabel","eventToImageCoordinates","nativeEvent","offsetX","clientHeight","offsetY","clientWidth","setTransform","drawImage","lineWidth","strokeStyle","agentFlipped","shape","shapeX","shapeY","lineTo","stroke","fill","activeAgentLabel","Image","drag","setDrag","startDrag","mouse","getHoveredAgent","agentPos","xTranslated","yTranslated","xRotated","yRotated","point_in_polygon","isDishMaskHovered","mouseX","mouseY","dishX","dishY","isDragging","onMouseDown","hoveredAgent","onMouseUp","xDelta","yDelta","onWheel","agentToScroll","deltaY","shiftKey","by","updateFrame","changes","clampFrame","settings","frameNum","round","reducer","action","warn","isPresent","isFlipped","prevActiveFrame","current","presentAgentNames","keys","filter","length","idx","indexOf","stepAdvanceDispatch","reverse","stepRetreatDispatch","defaultState","NO_MATCH","Labeler","useReducer","setSample","experimentId","URL","window","location","searchParams","get","controller","AbortController","signal","fetch","then","response","json","aborted","log","catch","err","alert","abort","listener","ret","key","hasSample","save_state","fromEntries","method","credentials","headers","JSON","stringify","Container","fluid","Row","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93dbe2e6.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\nexport const LabelsDispatch = createContext({})","import { Col, Form, FormCheck } from \"react-bootstrap\"\n\nimport agents from \"../agents.json\"\nimport { useContext } from \"react\"\nimport { LabelsDispatch } from \"./labels\"\n\nimport \"./Sidebar.css\"\n\nfunction SidebarAgentsPresent({ state }) {\n    const dispatch = useContext(LabelsDispatch)\n    if (!dispatch) return null\n\n    return <div>\n        <h4 className=\"text-center mt-3\">Agents Present</h4>\n        <p className=\"small text-secondary text-center\">Applies to the entire video</p>\n\n        <select>\n            <option value={null}>Add Agent&hellip;</option>\n        </select>\n\n        {/*<ol className=\"list-unstyled m-3\">*/}\n        {/*    {agents.map(agent => (*/}\n        {/*        <SidebarAgentPresent*/}\n        {/*            key={agent.name}*/}\n        {/*            agent={agent}*/}\n        {/*            active={agent.name === state.activeAgent}*/}\n        {/*            onActivate={() => dispatch({*/}\n        {/*                type: 'set_active_agent',*/}\n        {/*                activeAgent: agent.name*/}\n        {/*            })}*/}\n        {/*            checked={state.agentPresent?.[agent.name] ?? false}*/}\n        {/*            onChange={event => dispatch({*/}\n        {/*                type: 'set_agent_present',*/}\n        {/*                agent: agent.name,*/}\n        {/*                isPresent: event.currentTarget.checked*/}\n        {/*            })}*/}\n        {/*            flipped={state.agentFlipped?.[agent.name] ?? false}*/}\n        {/*            onFlip={event => dispatch({*/}\n        {/*                type: 'set_agent_flipped',*/}\n        {/*                agent: agent.name,*/}\n        {/*                isFlipped: event.currentTarget.checked*/}\n        {/*            })}*/}\n        {/*        />*/}\n        {/*    ))}*/}\n        {/*</ol>*/}\n    </div>\n}\n\nfunction SidebarAgentPresent({ agent, checked, onChange, flipped, onFlip }) {\n    return (<li>\n        <Form.Check\n            type=\"checkbox\"\n            id={agent.name + \"-active\"}\n            label={agent.display_name}\n            checked={checked}\n            onChange={onChange}\n        />\n        {!agent.symmetrical && <Form.Check\n            className=\"indented-checkbox\"\n            type=\"checkbox\"\n            id={agent.name + \"-flip\"}\n            label=\"Flip\"\n            checked={flipped}\n            onChange={onFlip}\n        />}\n    </li>)\n}\n\nfunction SidebarAgentAnnotation({ state, agent, label }) {\n    const dispatch = useContext(LabelsDispatch)\n    if (!dispatch) return null\n\n    return <li\n        className={\"list-group-item py-2 px-3 \" + (state.activeAgent === agent.name ? 'active' : '')}\n        onClick={() => dispatch({ type: 'set_active_agent', activeAgent: agent.name })}\n    >\n        {agent.display_name}\n        <Form>\n            <FormCheck\n                id={`agent-${agent.name}-blurred`}\n                label={\"Blurred\"}\n                checked={label?.isBlurred ?? false}\n                onChange={event => dispatch({\n                    type: 'set_agent_is_blurred',\n                    agentName: agent.name,\n                    isBlurred: event.currentTarget.checked\n                })}\n            />\n            <FormCheck\n                id={`agent-${agent.name}-obscured`}\n                label={\"Obscured\"}\n                checked={label?.isObscured ?? false}\n                onChange={event => dispatch({\n                    type: 'set_agent_is_obscured',\n                    agentName: agent.name,\n                    isObscured: event.currentTarget.checked\n                })}\n            />\n        </Form>\n    </li>\n}\n\nfunction SidebarAgentAnnotations({ state }) {\n    return <div className=\"flex-grow-1\">\n        <h4 className=\"text-center mt-3\">Agent Annotations</h4>\n        <p className=\"small text-secondary text-center\">Applies to the current frame</p>\n\n        <ul className=\"list-group list-group-flush\">\n            {agents.map(agent =>\n                state.agentPresent?.[agent.name] &&\n                <SidebarAgentAnnotation\n                    key={agent.name}\n                    state={state}\n                    agent={agent}\n                    label={state.frames?.[state.activeFrame]?.[agent.name]}\n                />\n            )}\n        </ul>\n        {Object.values(state.agentPresent).every(x => !x) && <p className=\"text-center mx-2\">\n            Use the checkboxes below to select the agents that are present in this video\n        </p>}\n    </div>\n}\n\nexport function Sidebar({ state }) {\n\n    return (<Col md={4} lg={3} xl={2} className=\"bg-light h-100 border-end border-dark d-flex flex-column gx-0\">\n        <SidebarAgentAnnotations state={state} />\n        <SidebarAgentsPresent state={state} />\n    </Col>)\n}","// export const apiBaseUrl = ''\nexport const apiBaseUrl = '//127.0.0.1:8011'\n\nexport function getSrcForFrame(sampleId, activeFrame) {\n    if (!sampleId) return \"\"\n    return `${apiBaseUrl}/api/frame.jpg?experiment=${sampleId}&frame=${activeFrame}`\n}","import { forwardRef, useContext, useEffect, useMemo, useState } from \"react\"\n\nimport \"./Timeline.css\"\nimport { Button, Modal, OverlayTrigger, Popover } from \"react-bootstrap\"\nimport { getSrcForFrame } from \"./util\"\nimport { LabelsDispatch } from \"./labels\"\n\nfunction getComponentType(state, i) {\n    if (i === state.activeFrame) return 'active'\n    return state.frames?.[i] ? 'labeled' : 'unlabeled'\n}\n\n// The shell of this component is copied straight from react-bootstrap documentation\nconst UpdatingPopover = forwardRef(\n    ({ popper, children, show: _, ...props }, ref) => {\n        useEffect(() => {\n            popper.scheduleUpdate()\n        }, [children, popper])\n\n        return (\n            <Popover ref={ref} body {...props}>\n                {children}\n            </Popover>\n        )\n    },\n)\n\n\nexport function Timeline({ sample, state }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    const components = useMemo(() => {\n        const components = []\n        let lastComponentType = null\n        let componentLength = 0\n        for (let i = 1; i <= sample.numFrames; i++) {\n            const componentType = getComponentType(state, i)\n            if (componentType !== lastComponentType && lastComponentType !== null) {\n                components.push({ componentType: lastComponentType, componentLength })\n                componentLength = 0\n            }\n            componentLength += 1\n            lastComponentType = componentType\n        }\n\n        if (componentLength !== 0) {\n            components.push({ componentType: lastComponentType, componentLength })\n        }\n        return components\n    }, [sample.numFrames, state])\n\n    const [hoverPositionPercent, setHoverPositionPercent] = useState(null)\n    const [wantsToNavigateToFrame, setWantsToNavigateToFrame] = useState(null)\n\n    function onMouseMove(event) {\n        const bounds = event.currentTarget.getBoundingClientRect()\n        const pct = (event.clientX - bounds.x) / bounds.width\n\n        // Clamp to [0, 1]\n        setHoverPositionPercent(Math.max(0, Math.min(pct, 1)))\n        event.preventDefault()\n    }\n\n    function onMouseLeave() {\n        setHoverPositionPercent(null)\n    }\n\n    // This floor operation could return the `sample.numFrames`th frame, which doesn't exist\n    const hoverPositionFrame = hoverPositionPercent === null ? null :\n        Math.min(Math.floor(hoverPositionPercent * sample.numFrames), sample.numFrames - 1)\n\n    function onClick() {\n        setWantsToNavigateToFrame(hoverPositionFrame)\n    }\n\n    // This noinspection is because WebStorm thinks all arguments to OverlayTrigger are required, but most are optional\n    // noinspection RequiredAttributes\n    return (<>\n        <Modal show={wantsToNavigateToFrame !== null} onHide={() => setWantsToNavigateToFrame(null)}>\n            <Modal.Header closeButton>\n                <Modal.Title>Jump to frame {wantsToNavigateToFrame}?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>\n                    You will automatically start annotating at this position. Removing annotations is not yet supported,\n                    so be sure this is the frame you want.\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => setWantsToNavigateToFrame(null)} variant=\"secondary\">Cancel</Button>\n                <Button onClick={() => {\n                    dispatch({ type: 'jump_to_frame', frame: wantsToNavigateToFrame })\n                    setWantsToNavigateToFrame(null)\n                }}\n                        variant=\"primary\">Jump to frame</Button>\n            </Modal.Footer>\n        </Modal>\n\n        <div className=\"timeline\"\n                 onMouseMove={onMouseMove}\n                 onMouseLeave={onMouseLeave}\n                 onClick={onClick}>\n\n            {hoverPositionFrame !== null && <OverlayTrigger show={true} placement={'top'} overlay={\n                <UpdatingPopover className=\"p-0\">\n                    <img\n                        src={getSrcForFrame(sample.id, hoverPositionFrame)}\n                        alt={`Frame ${hoverPositionFrame}`}\n                        height={180}\n                    />\n                </UpdatingPopover>\n            }>\n                <div className=\"timeline-cursor\" style={{\n                    width: `min(2px, ${100 / sample.numFrames}%)`,\n                    left: `${100 * hoverPositionFrame / sample.numFrames}%`,\n                }} />\n            </OverlayTrigger>}\n            {components.map(({ componentType, componentLength }, i) => (\n                <div key={i}\n                     className={`timeline-component timeline-component-${componentType}`}\n                     style={{ flexGrow: componentLength }} />\n            ))}\n        </div>\n    </>)\n}","import { useContext, useState } from \"react\"\nimport { LabelsDispatch } from \"./labels\"\nimport { Button, ButtonGroup, Card, Dropdown, Nav, Navbar, Spinner } from \"react-bootstrap\"\nimport { AiFillStepForward, AiFillStepBackward } from \"react-icons/ai\"\nimport { BiHelpCircle } from \"react-icons/bi\"\nimport { CgCloseR } from \"react-icons/cg\"\nimport { ImLock, ImUnlocked } from \"react-icons/im\"\n\nexport function Toolbar({ sample, state, returnToIndex }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    const [helpVisible, setHelpVisible] = useState(false)\n    return (<>\n        <Navbar className=\"d-flex justify-content-between\">\n            {/* Left */}\n            <Nav>\n                <Navbar.Text>\n                    <Spinner animation=\"border\" size=\"sm\" className={`me-2 ${state.loading ? 'visible' : 'invisible'}`} />\n                    Frame {state.activeFrame} of {sample.numFrames}\n                </Navbar.Text>\n            </Nav>\n\n            {/* Center */}\n            <Nav>\n                <ButtonGroup>\n                    <Button\n                        onClick={() => dispatch({ type: 'previous_frame' })}\n                        disabled={state.activeFrame <= 1}\n                    ><AiFillStepBackward /></Button>\n                    <Button\n                        onClick={() => dispatch({ type: 'next_frame' })}\n                        disabled={state.activeFrame + sample.sampleRate > sample.numFrames}\n                    ><AiFillStepForward /></Button>\n                </ButtonGroup>\n            </Nav>\n\n            {/* Right */}\n            <Nav>\n                <Dropdown>\n                    <Dropdown.Toggle>\n                        {state.dishMask?.locked ?\n                            <ImLock style={{ verticalAlign: \"text-top\" }} /> :\n                            <ImUnlocked style={{ verticalAlign: \"text-top\" }} />} Dish mask\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        {state.dishMask?.locked && <Dropdown.Item\n                            onClick={() => dispatch({ type: 'set_dish_mask_locked', value: false })}\n                        >Unlock</Dropdown.Item>}\n                        {!state.dishMask?.locked && <Dropdown.Item\n                            onClick={() => dispatch({ type: 'set_dish_mask_locked', value: true })}\n                        >Lock</Dropdown.Item>}\n\n                        <Dropdown.Item onClick={() => dispatch({ type: 'reset_dish_mask' })}>Reset to center</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <Button\n                    className=\"mx-2\"\n                    variant={helpVisible ? \"info\" : \"outline-info\"}\n                    onClick={() => setHelpVisible(!helpVisible)}\n                ><BiHelpCircle /></Button>\n\n                <Button onClick={returnToIndex}>Stop labeling</Button>\n            </Nav>\n        </Navbar>\n\n        {helpVisible && <Card border=\"info\" className=\"mb-2\">\n            <Card.Header>\n                <button className=\"float-end border-0\" onClick={() => setHelpVisible(!helpVisible)}>\n                    <CgCloseR />\n                </button>\n                Help\n            </Card.Header>\n            <Card.Body className=\"row\">\n                <dl className=\"col mb-0\">\n                    <dt>Space</dt>\n                    <dd>Advance through agents and frames</dd>\n                    <dt>b</dt>\n                    <dd>Reverse through agents and frames</dd>\n                </dl>\n                <dl className=\"col mb-0\">\n                    <dt>q/e/scroll</dt>\n                    <dd>Rotate selected agent</dd>\n                    <dt>w/a/s/d/drag</dt>\n                    <dd>Move selected agent</dd>\n                </dl>\n                <dl className=\"col mb-0\">\n                    <dt>Shift</dt>\n                    <dd>Rotate/move by 10x</dd>\n                </dl>\n            </Card.Body>\n        </Card>}\n    </>)\n}","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { Col } from \"react-bootstrap\"\nimport point_in_polygon from \"robust-point-in-polygon\"\n\nimport agents from \"../agents.json\"\n\nimport './VideoLabeler.css'\nimport { LabelsDispatch } from \"./labels\"\nimport { Timeline } from \"./Timeline\"\nimport { Toolbar } from \"./Toolbar\"\nimport { getSrcForFrame } from \"./util\"\n\nfunction transform(x, y, angle, flipped) {\n    const matrix = new DOMMatrix([\n        Math.cos(angle), -Math.sin(angle),\n        Math.sin(angle), Math.cos(angle),\n        x, y\n    ])\n    if (flipped) {\n        matrix.multiplySelf(new DOMMatrix([\n            1, 0,\n            0, -1,\n            0, 0,\n        ]))\n    }\n    return matrix\n}\n\nconst DISH_MASK = Symbol('DISH_MASK')\n\nexport function VideoLabeler({ sample, state, returnToIndex }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    /** @type {React.MutableRefObject<HTMLCanvasElement>} */\n    const [preloadCanvas, setPreloadCanvas] = useState(null)\n    const [image, setImage] = useState(null)\n    useEffect(() => {\n        const element = document.createElement('img')\n\n        function imageLoaded() {\n            setImage(element)\n            dispatch({ type: 'set_loading_finished' })\n        }\n\n        element.addEventListener('load', imageLoaded)\n        element.src = getSrcForFrame(sample.id, state.activeFrame)\n\n        // The element will be garbage collected as long as this event listener isn't around creating a cycle\n        return () => element.removeEventListener('load', imageLoaded)\n    }, [dispatch, sample.id, state.activeFrame])\n\n    const dishMaskLocation = useMemo(() => {\n        if (!image) return null\n\n        const x = state.dishMask?.x ?? image.naturalWidth / 2\n        const y = state.dishMask?.y ?? image.naturalHeight / 2\n        const radius = state.dishMask?.radius ?? 500\n\n        return { x, y, radius }\n    }, [image, state])\n\n    const [canvas, setCanvas] = useState(null)\n    useEffect(() => {\n        if (preloadCanvas && image) {\n            preloadCanvas.width = image.naturalWidth\n            preloadCanvas.height = image.naturalHeight\n\n            preloadCanvas.getContext('2d').save()\n\n            setCanvas(preloadCanvas)\n        }\n    }, [preloadCanvas, image])\n\n    useEffect(() => {\n        if (!canvas) return\n        if (!dishMaskLocation) return\n\n        const ctx = canvas.getContext('2d')\n\n        ctx.restore()\n        ctx.save()\n\n        ctx.fillStyle = \"black\"\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n        ctx.beginPath()\n        const { x, y, radius } = dishMaskLocation\n        ctx.arc(x, y, radius, 0, Math.PI * 2)\n        ctx.clip()\n    }, [canvas, dishMaskLocation])\n\n\n    const getAgentLocation = useCallback(function (state, agent) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        if (agent === DISH_MASK) {\n            return dishMaskLocation\n        }\n\n        console.assert(typeof agent === \"string\")\n\n        const agentLabel = state.frames[state.activeFrame]?.[agent] ?? {}\n        const x = agentLabel.x ?? canvas.width / 2\n        const y = agentLabel.y ?? canvas.height / 2\n        const angle = agentLabel.angle ?? 0\n\n        return { x, y, angle }\n    }, [canvas, dishMaskLocation])\n\n    useEffect(() => {\n        if (!canvas) return\n        if (!image) return\n\n        const ctx = canvas.getContext('2d')\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\n\n        ctx.drawImage(image, 0, 0)\n\n        ctx.lineWidth = 2\n\n        for (const agent of agents) {\n            if (!state.agentPresent[agent.name]) continue\n\n            if (agent.name === state.activeAgent) {\n                ctx.strokeStyle = 'red'\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.2)'\n            } else {\n                ctx.strokeStyle = 'darkgrey'\n                ctx.fillStyle = 'rgba(0,0,0,0.2)'\n            }\n            const { x, y, angle } = getAgentLocation(state, agent.name)\n            const flipped = state.agentFlipped?.[agent.name]\n\n            ctx.setTransform(transform(x, y, angle, flipped))\n            ctx.beginPath()\n            for (const [shapeX, shapeY] of agent.shape) {\n                ctx.lineTo(shapeX, shapeY)\n            }\n            ctx.stroke()\n            ctx.fill()\n        }\n    }, [canvas, getAgentLocation, image, state])\n\n    useEffect(() => {\n        const activeAgentLabel = state.frames[state.activeFrame]?.[state.activeAgent] ?? {}\n\n        if (dispatch && image && (\n            typeof activeAgentLabel.x === \"undefined\" ||\n            typeof activeAgentLabel.y === \"undefined\")\n        ) {\n            dispatch({\n                type: 'set_agent_position',\n                agentName: state.activeAgent,\n                x: activeAgentLabel.x ?? image.naturalWidth / 2,\n                y: activeAgentLabel.y ?? image.naturalHeight / 2,\n            })\n        }\n    }, [dispatch, state, image])\n\n    // Preload next 3 frames\n    useEffect(() => {\n        new Image().src = getSrcForFrame(sample.id, state.activeFrame + 1)\n        new Image().src = getSrcForFrame(sample.id, state.activeFrame + 2)\n        new Image().src = getSrcForFrame(sample.id, state.activeFrame + 3)\n    }, [sample.id, state.activeFrame])\n\n    function eventToImageCoordinates(event) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        const x = event.nativeEvent.offsetX * (canvas.height / canvas.clientHeight)\n        const y = event.nativeEvent.offsetY * (canvas.width / canvas.clientWidth)\n\n        return { x, y }\n    }\n\n    const [drag, setDrag] = useState(null)\n\n    function startDrag(x, y, agentName) {\n        if (!agentName) return\n\n        setDrag({\n            agentName,\n            mouse: { x, y },\n            agent: getAgentLocation(state, agentName)\n        })\n    }\n\n    function endDrag() {\n        setDrag(null)\n    }\n\n    function getHoveredAgent(x, y) {\n        for (const agent of agents) {\n            if (!state.agentPresent[agent.name]) continue\n\n            const agentPos = getAgentLocation(state, agent.name)\n            const xTranslated = x - agentPos.x\n            const yTranslated = y - agentPos.y\n            const xRotated = xTranslated * Math.cos(-agentPos.angle) + yTranslated * Math.sin(-agentPos.angle)\n            const yRotated = -xTranslated * Math.sin(-agentPos.angle) + yTranslated * Math.cos(-agentPos.angle)\n\n            if (point_in_polygon(agent.shape, [xRotated, yRotated]) <= 0) {\n                return agent.name\n            }\n        }\n\n        return null\n    }\n\n    function isDishMaskHovered(mouseX, mouseY) {\n        if (state.dishMask?.locked) return false\n        const { x: dishX, y: dishY, radius } = dishMaskLocation\n        const dist_sqr = (mouseX - dishX) ** 2 + (mouseY - dishY) ** 2\n        return dist_sqr > radius ** 2\n    }\n\n    function onCanvasMousedown(event) {\n        const { x, y } = eventToImageCoordinates(event)\n        if (isDishMaskHovered(x, y)) {\n            startDrag(x, y, DISH_MASK)\n            return\n        }\n\n        const hoveredAgent = getHoveredAgent(x, y)\n        if (hoveredAgent) {\n            dispatch({\n                type: 'set_active_agent',\n                activeAgent: hoveredAgent\n            })\n        }\n        startDrag(x, y, hoveredAgent ?? state.activeAgent)\n    }\n\n    function isDragging() {\n        return drag && (drag.agentName === state.activeAgent || drag.agentName === DISH_MASK)\n    }\n\n    function onCanvasMousemove(event) {\n        if (isDragging()) {\n            const xDelta = event.nativeEvent.offsetX * (canvas.height / canvas.clientHeight) - drag.mouse.x\n            const yDelta = event.nativeEvent.offsetY * (canvas.width / canvas.clientWidth) - drag.mouse.y\n\n            if (drag.agentName === DISH_MASK) {\n                dispatch({\n                    type: 'set_dish_mask_position',\n                    x: xDelta + drag.agent.x,\n                    y: yDelta + drag.agent.y,\n                })\n            } else {\n                dispatch({\n                    type: 'set_agent_position',\n                    agentName: drag.agentName,\n                    x: xDelta + drag.agent.x,\n                    y: yDelta + drag.agent.y,\n                })\n            }\n        }\n    }\n\n    function agentToScroll(x, y) {\n        // If dragging, rotate the agent being dragged. Otherwise, rotate the hovered agent (or dish). Otherwise,\n        // scroll the selected agent\n\n        if (isDragging()) return drag.agentName\n\n        if (isDishMaskHovered(x, y)) return DISH_MASK\n\n        return getHoveredAgent(x, y) ?? state.activeAgent\n    }\n\n    function onCanvasWheel(event) {\n        const { x, y } = eventToImageCoordinates(event)\n\n        const agentName = agentToScroll(x, y)\n\n        if (agentName === DISH_MASK) {\n            const { radius } = dishMaskLocation\n            dispatch({\n                type: 'set_dish_mask_radius',\n                radius: Math.max(10, radius + event.deltaY / (event.shiftKey ? 10 : 100)),\n            })\n        } else if (agentName) {\n            if (agentName !== state.activeAgent) {\n                dispatch({\n                    type: 'set_active_agent',\n                    activeAgent: agentName\n                })\n            }\n\n            dispatch({\n                type: 'rotate_agent',\n                agentName,\n                by: event.deltaY / (event.shiftKey ? 1000 : 10000),\n            })\n        }\n    }\n\n    return (<Col className=\"h-100 d-flex flex-column\">\n        <Toolbar sample={sample} state={state} returnToIndex={returnToIndex} />\n        <div className=\"labeler-canvas-container\">\n            <canvas\n                className=\"labeler-canvas\"\n                ref={setPreloadCanvas}\n                onMouseDown={onCanvasMousedown}\n                onMouseUp={endDrag}\n                onMouseMove={onCanvasMousemove}\n                onWheel={onCanvasWheel}\n            />\n            <Timeline sample={sample} state={state} />\n        </div>\n    </Col>)\n}","function updateFrame(state, agent, changes) {\n    if (!agent) return state\n    if (typeof changes === \"function\") {\n        changes = changes(state.frames[state.activeFrame]?.[agent] ?? {})\n    }\n    return {\n        ...state,\n        frames: {\n            ...state.frames,\n            [state.activeFrame]: {\n                ...state.frames[state.activeFrame],\n                [agent]: {\n                    ...state.frames[state.activeFrame]?.[agent] ?? {},\n                    ...changes\n                }\n            }\n        }\n    }\n}\n\nfunction normalizeAngle(angle) {\n    return angle % (Math.PI * 2)\n}\n\nfunction stepAdvanceDispatch(state) {\n    const presentAgentNames = Object.keys(state.agentPresent).filter(agentName => state.agentPresent[agentName])\n\n    // First, if there is no active agent, try to activate the first present agent\n    if (!state.activeAgent) {\n        if (presentAgentNames.length > 0) {\n            return { type: 'set_active_agent', activeAgent: presentAgentNames[0] }\n        } else {\n            // If there aren't any present agents, just go to the next frame\n            return { type: 'next_frame' }\n        }\n    }\n\n    // Try to activate the next present agent\n    const idx = presentAgentNames.indexOf(state.activeAgent)\n    if (idx < 0) {\n        throw new Error(\"Current agent is not present\")\n    } else if (idx + 1 < presentAgentNames.length) {\n        return { type: 'set_active_agent', activeAgent: presentAgentNames[idx + 1] }\n    }\n\n    // If nothing else worked, advance the frame and reset the agent\n    return { type: 'advance_frame_and_set_agent', activeAgent: presentAgentNames[0] }\n}\n\nfunction stepRetreatDispatch(state) {\n    const presentAgentNames = Object.keys(state.agentPresent).filter(agentName => state.agentPresent[agentName]).reverse()\n\n    // First, if there is no active agent, try to activate the first present agent\n    if (!state.activeAgent) {\n        if (presentAgentNames.length > 0) {\n            return { type: 'set_active_agent', activeAgent: presentAgentNames[0] }\n        }\n        throw new Error(\"Tried to retreat when no agents were active\")\n    }\n\n    // Try to activate the next present agent\n    const idx = presentAgentNames.indexOf(state.activeAgent)\n    if (idx < 0) {\n        throw new Error(\"Current agent is not present\")\n    } else if (idx + 1 < presentAgentNames.length) {\n        return { type: 'set_active_agent', activeAgent: presentAgentNames[idx + 1] }\n    }\n\n    // If nothing else worked, advance the frame and reset the agent\n    return { type: 'retreat_frame_and_set_agent', activeAgent: presentAgentNames[0] }\n}\n\nfunction clampFrame(settings, frameNum) {\n    // convert to 0-indexed for math\n    frameNum -= 1\n    // clamp to existing frames\n    frameNum = Math.max(0, Math.min(frameNum, settings.numFrames - 1))\n    // round to the sample rate\n    frameNum = Math.round(frameNum / settings.sampleRate) * settings.sampleRate\n    // convert back to 1-indexed\n    frameNum += 1\n    return frameNum\n}\n\nexport default function reducer(state, action) {\n    // The only action that can be performed before initial state is received is to receive the initial state\n    if (!state.settings && action.type !== 'set_state') {\n        console.warn(\"Received\", action.type, \"action before initial state from server\")\n        return state\n    }\n\n    switch (action.type) {\n        case 'set_state':\n            return action.state\n        case 'set_loading_finished':\n            return { ...state, loading: false }\n        case 'set_active_agent':\n            return { ...state, activeAgent: action.activeAgent }\n        case 'set_agent_present':\n            return { ...state, agentPresent: { ...state.agentPresent, [action.agent]: action.isPresent } }\n        case 'set_agent_flipped':\n            return { ...state, agentFlipped: { ...state.agentFlipped, [action.agent]: action.isFlipped } }\n        case 'active_agent_toggle_present':\n            return {\n                ...state,\n                agentPresent: { ...state.agentPresent, [state.activeAgent]: !state.agentPresent[state.activeAgent] }\n            }\n        case 'set_agent_position':\n            return updateFrame(state, action.agentName, { x: action.x, y: action.y })\n        case 'rotate_agent':\n            return updateFrame(state, action.agentName, agent => ({\n                angle: normalizeAngle((agent.angle || 0) + action.by)\n            }))\n        case 'rotate_active_agent':\n            return reducer(state, { type: 'rotate_agent', agentName: state.activeAgent, by: action.by})\n        case 'move_agent':\n            return updateFrame(state, action.agentName, agent => ({\n                x: (agent.x || 0) + (action.x || 0),\n                y: (agent.y || 0) + (action.y || 0),\n            }))\n        case 'move_active_agent':\n            return reducer(state, { type: 'move_agent', agentName: state.activeAgent, x: action.x, y: action.y })\n        case 'next_frame':\n            if (state.loading) return state\n            const prevActiveFrame = state.activeFrame\n            const activeFrame = clampFrame(state.settings, state.activeFrame + state.settings.sampleRate)\n            return {\n                ...state,\n                loading: true,\n                activeFrame,\n                frames: {\n                    ...state.frames,\n                    [activeFrame]: state.frames[activeFrame] ?? state.frames[prevActiveFrame],\n                }\n            }\n        case 'previous_frame':\n            return {\n                ...state,\n                loading: true,\n                activeFrame: clampFrame(state.settings, state.activeFrame - state.settings.sampleRate)\n            }\n        case 'jump_to_frame':\n            return {\n                ...state,\n                loading: true,\n                activeFrame: clampFrame(state.settings, action.frame)\n            }\n        case 'set_agent_is_blurred':\n            return updateFrame(state, action.agentName, { isBlurred: action.isBlurred })\n        case 'toggle_active_agent_is_blurred':\n            return updateFrame(state, state.activeAgent, current => ({ isBlurred: !current.isBlurred }))\n        case 'set_agent_is_obscured':\n            return updateFrame(state, action.agentName, { isObscured: action.isObscured })\n        case 'toggle_active_agent_is_obscured':\n            return updateFrame(state, state.activeAgent, current => ({ isObscured: !current.isObscured }))\n        case 'step_advance':\n            return reducer(state, stepAdvanceDispatch(state))\n        case 'step_retreat':\n            return reducer(state, stepRetreatDispatch(state))\n        case 'advance_frame_and_set_agent':\n            if (state.loading) return state\n            return reducer(\n                reducer(state, { type: 'next_frame' }),\n                { type: 'set_active_agent', activeAgent: action.activeAgent })\n        case 'retreat_frame_and_set_agent':\n            if (state.loading) return state\n            return reducer(\n                reducer(state, { type: 'previous_frame' }),\n                { type: 'set_active_agent', activeAgent: action.activeAgent })\n        case 'set_dish_mask_position':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    x: action.x,\n                    y: action.y,\n                }\n            }\n        case 'set_dish_mask_radius':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    radius: action.radius,\n                }\n            }\n        case 'reset_dish_mask':\n            return {\n                ...state,\n                dishMask: null\n            }\n\n        case 'set_dish_mask_locked':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    locked: action.value\n                }\n            }\n\n        default:\n            throw new Error(\"Unknown reducer action\")\n    }\n}","import { useEffect, useMemo, useReducer, useState } from \"react\"\nimport { Container, Row } from \"react-bootstrap\"\nimport { Sidebar } from \"./Sidebar\"\nimport { VideoLabeler } from \"./VideoLabeler\"\nimport reducer from \"../reducer\"\nimport { LabelsDispatch } from \"./labels\"\nimport { apiBaseUrl } from \"./util\"\n\n// note only keys listed in save_state below are persisted to the server\nconst defaultState = {\n    settings: null,\n    loading: true,\n    activeFrame: 1,\n    activeAgent: null,\n    agentPresent: {},\n    frames: {}\n}\n\nconst NO_MATCH = Symbol(\"NO_MATCH\")\n\nexport default function Labeler() {\n    const [state, dispatch] = useReducer(reducer, defaultState, i => i)\n\n    const [sample, setSample] = useState(null)\n\n    const experimentId = useMemo(() => {\n        return new URL(window.location).searchParams.get(\"experiment_id\")\n    }, [])\n\n    useEffect(() => {\n        const controller = new AbortController()\n        const signal = controller.signal\n        fetch(`${apiBaseUrl}/api/experiment?id=${experimentId}`, { signal })\n          .then(response => response.json())\n          .then(sample => {\n              if (signal.aborted) {\n                  console.log(\"State restoration aborted after fetch finished\")\n                  return\n              }\n              setSample(sample)\n\n              const state = { ...defaultState, ...sample.label  }\n              // Have to do this weird inversion of object structure to get settings into redux\n              delete sample.label\n              state.settings = sample\n\n              dispatch({ type: 'set_state', state })\n          })\n          .catch(err => {\n              // AbortError is for intentional aborts using AbortController, so no handling is needed\n              if (err.name === 'AbortError') return\n\n              alert(`Failed to fetch experiment: ${err}`)\n          })\n\n        return () => controller.abort()\n    }, [experimentId])\n\n    useEffect(() => {\n        function listener(event) {\n            const ret = (() => {\n                switch (event.key) {\n                    // Changing frames\n                    case ' ':\n                        return dispatch({ type: 'step_advance' })\n                    case 'b':\n                        return dispatch({ type: 'step_retreat' })\n\n                    // Setting quality\n                    case 'r':\n                        return dispatch({ type: 'toggle_active_agent_is_blurred' })\n                    case 'f':\n                        return dispatch({ type: 'toggle_active_agent_is_obscured' })\n\n                    // Rotating\n                    case 'q':\n                        return dispatch({ type: 'rotate_active_agent', by: 0.01 })\n                    case 'Q':\n                        return dispatch({ type: 'rotate_active_agent', by: 0.1 })\n                    case 'e':\n                        return dispatch({ type: 'rotate_active_agent', by: -0.01 })\n                    case 'E':\n                        return dispatch({ type: 'rotate_active_agent', by: -0.1 })\n\n                    // Translating\n                    case 'w':\n                        return dispatch({ type: 'move_active_agent', y: -1 })\n                    case 'W':\n                        return dispatch({ type: 'move_active_agent', y: -10 })\n                    case 'a':\n                        return dispatch({ type: 'move_active_agent', x: -1 })\n                    case 'A':\n                        return dispatch({ type: 'move_active_agent', x: -10 })\n                    case 's':\n                        return dispatch({ type: 'move_active_agent', y: 1 })\n                    case 'S':\n                        return dispatch({ type: 'move_active_agent', y: 10 })\n                    case 'd':\n                        return dispatch({ type: 'move_active_agent', x: 1 })\n                    case 'D':\n                        return dispatch({ type: 'move_active_agent', x: 10 })\n\n                    default:\n                        break\n                }\n                return NO_MATCH\n            })()\n            if (ret !== NO_MATCH) event.preventDefault()\n            return ret\n        }\n\n        document.addEventListener('keypress', listener)\n        return () => document.removeEventListener('keypress', listener)\n    }, [])\n\n    // Save on every frame change\n    const hasSample = !!sample\n    useEffect(() => {\n        if (!hasSample || !state.settings) return\n        const save_state = Object.fromEntries(\n          [\"activeFrame\", \"activeAgent\", \"agentPresent\", \"frames\"]\n            .map(key => [key, state[key]])\n        )\n        fetch(`${apiBaseUrl}/api/set_label?id=${experimentId}`, {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(save_state)\n        })\n          .catch(err => {\n              alert(`Failed to save changes: ${err}`)\n          })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hasSample, state.activeFrame, experimentId])\n\n    function returnToIndex() {\n        window.location = `${apiBaseUrl}/`\n    }\n\n    if (!sample) return (<p>Loading&hellip;</p>)\n\n    return (<Container fluid className=\"h-100\">\n        <Row className=\"h-100\">\n            <LabelsDispatch.Provider value={dispatch}>\n                <Sidebar state={state} />\n                <VideoLabeler sample={sample} state={state} returnToIndex={returnToIndex} />\n            </LabelsDispatch.Provider>\n        </Row>\n    </Container>)\n}","import Labeler from \"./components/Labeler\"\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Labeler />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}