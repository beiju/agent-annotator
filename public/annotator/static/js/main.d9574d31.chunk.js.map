{"version":3,"sources":["components/labels.js","components/util.js","components/Timeline.js","components/Toolbar.js","components/VideoLabeler.js","components/Sidebar.js","reducer.js","components/Labeler.js","App.js","reportWebVitals.js","index.js"],"names":["LabelsDispatch","createContext","apiBaseUrl","window","location","port","getSrcForFrame","sampleId","activeFrame","getComponentType","state","i","frames","UpdatingPopover","forwardRef","ref","popper","children","props","show","useEffect","scheduleUpdate","Popover","body","Timeline","sample","dispatch","useContext","components","useMemo","lastComponentType","componentLength","numFrames","componentType","push","useState","hoverPositionPercent","setHoverPositionPercent","wantsToNavigateToFrame","setWantsToNavigateToFrame","hoverPositionFrame","Math","min","floor","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","onClick","variant","type","frame","className","onMouseMove","event","bounds","currentTarget","getBoundingClientRect","pct","clientX","x","width","max","preventDefault","onMouseLeave","OverlayTrigger","placement","overlay","src","id","alt","height","style","left","map","flexGrow","Toolbar","returnToIndex","save","helpVisible","setHelpVisible","Navbar","Nav","Text","Spinner","animation","size","loading","sampleRate","ButtonGroup","disabled","Dropdown","Toggle","dishMask","locked","verticalAlign","Menu","Item","value","saving","Card","border","transform","y","angle","flipped","matrix","DOMMatrix","cos","sin","multiplySelf","DISH_MASK","Symbol","VideoLabeler","preloadCanvas","setPreloadCanvas","image","setImage","element","document","createElement","imageLoaded","addEventListener","removeEventListener","dishMaskLocation","naturalWidth","naturalHeight","radius","canvas","setCanvas","getContext","ctx","restore","fillStyle","fillRect","beginPath","arc","PI","clip","getAgentLocation","useCallback","agentId","Error","console","assert","agentLabel","eventToImageCoordinates","nativeEvent","offsetX","clientHeight","offsetY","clientWidth","setTransform","drawImage","lineWidth","Object","entries","agents","agent","color_convert","hex","hsl","color","slice","h","s","l","activeAgent","strokeStyle","shape","shapeX","shapeY","lineTo","stroke","fill","activeAgentLabel","Image","drag","setDrag","startDrag","mouse","getHoveredAgent","agentPos","xTranslated","yTranslated","xRotated","yRotated","point_in_polygon","isDishMaskHovered","mouseX","mouseY","dishX","dishY","isDragging","Col","onMouseDown","hoveredAgent","onMouseUp","xDelta","yDelta","onWheel","agentToScroll","deltaY","shiftKey","by","AgentEditModal","onClose","hoveredPoint","setHoveredPoint","draggingPoint","setDraggingPoint","NaN","top","bottom","right","setDimensions","log","mouseLocation","setMouseLocation","agentTf","inverse","offsetTf","multiply","scale","length","eventToScaledAgentCoordinates","closest","dist","sqrt","pow","Form","Group","controlId","Label","Control","display_name","onChange","cursor","SidebarAgentsPresent","agentToAdd","setAgentToAdd","editingAgent","setEditingAgent","SidebarAgent","onColorChange","onClickEdit","_","onClickDelete","Select","e","name","agentName","existing_agent","find","hsv","random","addAgent","title","SidebarAgentAnnotation","label","FormCheck","checked","isBlurred","isObscured","SidebarAgentAnnotations","keys","Sidebar","md","lg","xl","updateFrame","changes","clampFrame","settings","frameNum","round","reducer","action","warn","agentPresent","isPresent","agentFlipped","isFlipped","prevActiveFrame","current","presentAgentIds","sort","idx","indexOf","stepAdvanceDispatch","reverse","stepRetreatDispatch","nextAgentId","fromEntries","filter","modal","defaultState","NO_MATCH","Labeler","useReducer","setSample","saveError","setSaveError","saveSuccessMessage","setSaveSuccessMessage","saveRequests","setSaveRequests","performingRequestedSave","setPerformingRequestedSave","experimentId","URL","searchParams","get","controller","AbortController","signal","fetch","then","response","json","aborted","catch","err","alert","abort","listener","ret","key","hasSample","save_state","method","credentials","headers","JSON","stringify","status","arr","origin","statusText","message","Container","fluid","Row","Provider","n","ToastContainer","position","Toast","delay","autohide","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9574d31.chunk.js","sourcesContent":["import { createContext } from \"react\"\n\nexport const LabelsDispatch = createContext({})","export const apiBaseUrl = (window.location.port === \"3000\") ? '//127.0.0.1:8011' : '';\n\nexport function getSrcForFrame(sampleId, activeFrame) {\n    if (!sampleId) return \"\"\n    return `${apiBaseUrl}/api/frame.jpg?experiment=${sampleId}&frame=${activeFrame}`\n}","import { forwardRef, useContext, useEffect, useMemo, useState } from \"react\"\n\nimport \"./Timeline.css\"\nimport { Button, Modal, OverlayTrigger, Popover } from \"react-bootstrap\"\nimport { getSrcForFrame } from \"./util\"\nimport { LabelsDispatch } from \"./labels\"\n\nfunction getComponentType(state, i) {\n    if (i === state.activeFrame) return 'active'\n    return state.frames?.[i] ? 'labeled' : 'unlabeled'\n}\n\n// The shell of this component is copied straight from react-bootstrap documentation\nconst UpdatingPopover = forwardRef(\n    ({ popper, children, show: _, ...props }, ref) => {\n        useEffect(() => {\n            popper.scheduleUpdate()\n        }, [children, popper])\n\n        return (\n            <Popover ref={ref} body {...props}>\n                {children}\n            </Popover>\n        )\n    },\n)\n\n\nexport function Timeline({ sample, state }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    const components = useMemo(() => {\n        const components = []\n        let lastComponentType = null\n        let componentLength = 0\n        for (let i = 1; i <= sample.numFrames; i++) {\n            const componentType = getComponentType(state, i)\n            if (componentType !== lastComponentType && lastComponentType !== null) {\n                components.push({ componentType: lastComponentType, componentLength })\n                componentLength = 0\n            }\n            componentLength += 1\n            lastComponentType = componentType\n        }\n\n        if (componentLength !== 0) {\n            components.push({ componentType: lastComponentType, componentLength })\n        }\n        return components\n    }, [sample.numFrames, state])\n\n    const [hoverPositionPercent, setHoverPositionPercent] = useState(null)\n    const [wantsToNavigateToFrame, setWantsToNavigateToFrame] = useState(null)\n\n    function onMouseMove(event) {\n        const bounds = event.currentTarget.getBoundingClientRect()\n        const pct = (event.clientX - bounds.x) / bounds.width\n\n        // Clamp to [0, 1]\n        setHoverPositionPercent(Math.max(0, Math.min(pct, 1)))\n        event.preventDefault()\n    }\n\n    function onMouseLeave() {\n        setHoverPositionPercent(null)\n    }\n\n    // This floor operation could return the `sample.numFrames`th frame, which doesn't exist\n    const hoverPositionFrame = hoverPositionPercent === null ? null :\n        Math.min(Math.floor(hoverPositionPercent * sample.numFrames), sample.numFrames - 1)\n\n    function onClick() {\n        setWantsToNavigateToFrame(hoverPositionFrame)\n    }\n\n    // This noinspection is because WebStorm thinks all arguments to OverlayTrigger are required, but most are optional\n    // noinspection RequiredAttributes\n    return (<>\n        <Modal show={wantsToNavigateToFrame !== null} onHide={() => setWantsToNavigateToFrame(null)}>\n            <Modal.Header closeButton>\n                <Modal.Title>Jump to frame {wantsToNavigateToFrame}?</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>\n                    You will automatically start annotating at this position. Removing annotations is not yet supported,\n                    so be sure this is the frame you want.\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => setWantsToNavigateToFrame(null)} variant=\"secondary\">Cancel</Button>\n                <Button onClick={() => {\n                    dispatch({ type: 'jump_to_frame', frame: wantsToNavigateToFrame })\n                    setWantsToNavigateToFrame(null)\n                }}\n                        variant=\"primary\">Jump to frame</Button>\n            </Modal.Footer>\n        </Modal>\n\n        <div className=\"timeline\"\n                 onMouseMove={onMouseMove}\n                 onMouseLeave={onMouseLeave}\n                 onClick={onClick}>\n\n            {hoverPositionFrame !== null && <OverlayTrigger show={true} placement={'top'} overlay={\n                <UpdatingPopover className=\"p-0\">\n                    <img\n                        src={getSrcForFrame(sample.id, hoverPositionFrame)}\n                        alt={`Frame ${hoverPositionFrame}`}\n                        height={180}\n                    />\n                </UpdatingPopover>\n            }>\n                <div className=\"timeline-cursor\" style={{\n                    width: `min(2px, ${100 / sample.numFrames}%)`,\n                    left: `${100 * hoverPositionFrame / sample.numFrames}%`,\n                }} />\n            </OverlayTrigger>}\n            {components.map(({ componentType, componentLength }, i) => (\n                <div key={i}\n                     className={`timeline-component timeline-component-${componentType}`}\n                     style={{ flexGrow: componentLength }} />\n            ))}\n        </div>\n    </>)\n}","import { useContext, useState } from \"react\"\nimport { LabelsDispatch } from \"./labels\"\nimport { Button, ButtonGroup, Card, Dropdown, Nav, Navbar, Spinner } from \"react-bootstrap\"\nimport { AiFillStepForward, AiFillStepBackward } from \"react-icons/ai\"\nimport { BiHelpCircle } from \"react-icons/bi\"\nimport { CgCloseR } from \"react-icons/cg\"\nimport { ImLock, ImUnlocked } from \"react-icons/im\"\n\nexport function Toolbar({ sample, state, returnToIndex, save }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    const [helpVisible, setHelpVisible] = useState(false)\n    return (<>\n        <Navbar className=\"d-flex justify-content-between\">\n            {/* Left */}\n            <Nav>\n                <Navbar.Text>\n                    <Spinner animation=\"border\" size=\"sm\" className={`me-2 ${state.loading ? 'visible' : 'invisible'}`} />\n                    Frame {state.activeFrame} of {sample.numFrames} (sampling every {sample.sampleRate} frames)\n                </Navbar.Text>\n            </Nav>\n\n            {/* Center */}\n            <Nav>\n                <ButtonGroup>\n                    <Button\n                        onClick={() => dispatch({ type: 'previous_frame' })}\n                        disabled={state.activeFrame <= 1}\n                    ><AiFillStepBackward /></Button>\n                    <Button\n                        onClick={() => dispatch({ type: 'next_frame' })}\n                        disabled={state.activeFrame + sample.sampleRate > sample.numFrames}\n                    ><AiFillStepForward /></Button>\n                </ButtonGroup>\n            </Nav>\n\n            {/* Right */}\n            <Nav>\n                <Dropdown>\n                    <Dropdown.Toggle>\n                        {state.dishMask?.locked ?\n                            <ImLock style={{ verticalAlign: \"text-top\" }} /> :\n                            <ImUnlocked style={{ verticalAlign: \"text-top\" }} />} Dish mask\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        {state.dishMask?.locked && <Dropdown.Item\n                            onClick={() => dispatch({ type: 'set_dish_mask_locked', value: false })}\n                        >Unlock</Dropdown.Item>}\n                        {!state.dishMask?.locked && <Dropdown.Item\n                            onClick={() => dispatch({ type: 'set_dish_mask_locked', value: true })}\n                        >Lock</Dropdown.Item>}\n\n                        <Dropdown.Item onClick={() => dispatch({ type: 'reset_dish_mask' })}>Reset to center</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <Button\n                    className=\"mx-2\"\n                    variant={helpVisible ? \"info\" : \"outline-info\"}\n                    onClick={() => setHelpVisible(!helpVisible)}\n                ><BiHelpCircle /></Button>\n\n                <Button className=\"me-2\" onClick={save} disabled={state.saving}>\n                    {state.saving ? \"Saving…\" : \"Save\"}\n                </Button>\n                <Button onClick={returnToIndex}>Exit annotator</Button>\n            </Nav>\n        </Navbar>\n\n        {helpVisible && <Card border=\"info\" className=\"mb-2\">\n            <Card.Header>\n                <button className=\"float-end border-0\" onClick={() => setHelpVisible(!helpVisible)}>\n                    <CgCloseR />\n                </button>\n                Help\n            </Card.Header>\n            <Card.Body className=\"row\">\n                <dl className=\"col mb-0\">\n                    <dt>Space</dt>\n                    <dd>Advance through agents and frames</dd>\n                    <dt>b</dt>\n                    <dd>Reverse through agents and frames</dd>\n                </dl>\n                <dl className=\"col mb-0\">\n                    <dt>q/e/scroll</dt>\n                    <dd>Rotate selected agent</dd>\n                    <dt>w/a/s/d/drag</dt>\n                    <dd>Move selected agent</dd>\n                </dl>\n                <dl className=\"col mb-0\">\n                    <dt>Shift</dt>\n                    <dd>Rotate/move by 10x</dd>\n                </dl>\n            </Card.Body>\n        </Card>}\n    </>)\n}","import { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { Col } from \"react-bootstrap\"\nimport point_in_polygon from \"robust-point-in-polygon\"\n\nimport './VideoLabeler.css'\nimport { LabelsDispatch } from \"./labels\"\nimport { Timeline } from \"./Timeline\"\nimport { Toolbar } from \"./Toolbar\"\nimport { getSrcForFrame } from \"./util\"\nimport color_convert from \"color-convert\"\n\nexport function transform(x, y, angle, flipped) {\n    const matrix = new DOMMatrix([\n        Math.cos(angle), -Math.sin(angle),\n        Math.sin(angle), Math.cos(angle),\n        x, y\n    ])\n    if (flipped) {\n        matrix.multiplySelf(new DOMMatrix([\n            1, 0,\n            0, -1,\n            0, 0,\n        ]))\n    }\n    return matrix\n}\n\nconst DISH_MASK = Symbol('DISH_MASK')\n\nexport function VideoLabeler({ sample, state, returnToIndex, save }) {\n    const dispatch = useContext(LabelsDispatch)\n\n    /** @type {React.MutableRefObject<HTMLCanvasElement>} */\n    const [preloadCanvas, setPreloadCanvas] = useState(null)\n    const [image, setImage] = useState(null)\n    useEffect(() => {\n        const element = document.createElement('img')\n\n        function imageLoaded() {\n            setImage(element)\n            dispatch({ type: 'set_loading_finished' })\n        }\n\n        element.addEventListener('load', imageLoaded)\n        element.src = getSrcForFrame(sample.id, state.activeFrame)\n\n        // The element will be garbage collected as long as this event listener isn't around creating a cycle\n        return () => element.removeEventListener('load', imageLoaded)\n    }, [dispatch, sample.id, state.activeFrame])\n\n    const dishMaskLocation = useMemo(() => {\n        if (!image) return null\n\n        const x = state.dishMask?.x ?? image.naturalWidth / 2\n        const y = state.dishMask?.y ?? image.naturalHeight / 2\n        const radius = state.dishMask?.radius ?? 500\n\n        return { x, y, radius }\n    }, [image, state])\n\n    const [canvas, setCanvas] = useState(null)\n    useEffect(() => {\n        if (preloadCanvas && image) {\n            preloadCanvas.width = image.naturalWidth\n            preloadCanvas.height = image.naturalHeight\n\n            preloadCanvas.getContext('2d').save()\n\n            setCanvas(preloadCanvas)\n        }\n    }, [preloadCanvas, image])\n\n    useEffect(() => {\n        if (!canvas) return\n        if (!dishMaskLocation) return\n\n        const ctx = canvas.getContext('2d')\n\n        ctx.restore()\n        ctx.save()\n\n        ctx.fillStyle = \"black\"\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n        ctx.beginPath()\n        const { x, y, radius } = dishMaskLocation\n        ctx.arc(x, y, radius, 0, Math.PI * 2)\n        ctx.clip()\n    }, [canvas, dishMaskLocation])\n\n\n    const getAgentLocation = useCallback(function (state, agentId) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        if (agentId === DISH_MASK) {\n            return dishMaskLocation\n        }\n\n        console.assert(typeof agentId === \"string\")\n\n        const agentLabel = state.frames[state.activeFrame]?.[agentId] ?? {}\n        const x = agentLabel.x ?? canvas.width / 2\n        const y = agentLabel.y ?? canvas.height / 2\n        const angle = agentLabel.angle ?? 0\n\n        return { x, y, angle }\n    }, [canvas, dishMaskLocation])\n\n    useEffect(() => {\n        if (!canvas) return\n        if (!image) return\n\n        const ctx = canvas.getContext('2d')\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\n\n        ctx.drawImage(image, 0, 0)\n\n        ctx.lineWidth = 2\n\n        for (const [agentId, agent] of Object.entries(state.agents)) {\n            const [h, s, l] = color_convert.hex.hsl(agent.color.slice(1))\n            if (agentId === state.activeAgent) {\n                ctx.strokeStyle = `hsla(${h}, ${s}%, ${l}%, 1)`\n                ctx.fillStyle = `hsla(${h}, ${s}%, ${l}%, 0.2)`\n            } else {\n                ctx.strokeStyle = `hsla(${h}, ${s * 0.25}%, ${l}%, 1)`\n                ctx.fillStyle = `hsla(${h}, ${s * 0.25}%, ${l}%, 0.2)`\n            }\n            const { x, y, angle } = getAgentLocation(state, agentId)\n            const flipped = false // TODO remove \n\n            ctx.setTransform(transform(x, y, angle, flipped))\n            ctx.beginPath()\n            for (const [shapeX, shapeY] of agent.shape) {\n                ctx.lineTo(shapeX, shapeY)\n            }\n            ctx.stroke()\n            ctx.fill()\n        }\n    }, [canvas, getAgentLocation, image, state])\n\n    useEffect(() => {\n        const activeAgentLabel = state.frames[state.activeFrame]?.[state.activeAgent] ?? {}\n\n        if (dispatch && image && (\n            typeof activeAgentLabel.x === \"undefined\" ||\n            typeof activeAgentLabel.y === \"undefined\")\n        ) {\n            dispatch({\n                type: 'set_agent_position',\n                agentId: state.activeAgent,\n                x: activeAgentLabel.x ?? image.naturalWidth / 2,\n                y: activeAgentLabel.y ?? image.naturalHeight / 2,\n            })\n        }\n    }, [dispatch, state, image])\n\n    // Preload next 3 frames\n    useEffect(() => {\n        new Image().src = getSrcForFrame(sample.id, state.activeFrame + 1)\n        new Image().src = getSrcForFrame(sample.id, state.activeFrame + 2)\n        new Image().src = getSrcForFrame(sample.id, state.activeFrame + 3)\n    }, [sample.id, state.activeFrame])\n\n    function eventToImageCoordinates(event) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        const x = event.nativeEvent.offsetX * (canvas.height / canvas.clientHeight)\n        const y = event.nativeEvent.offsetY * (canvas.width / canvas.clientWidth)\n\n        return { x, y }\n    }\n\n    const [drag, setDrag] = useState(null)\n\n    function startDrag(x, y, agentId) {\n        if (!agentId) return\n\n        setDrag({\n            agentId,\n            mouse: { x, y },\n            agent: getAgentLocation(state, agentId)\n        })\n    }\n\n    function endDrag() {\n        setDrag(null)\n    }\n\n    function getHoveredAgent(x, y) {\n        for (const [agentId, agent] of Object.entries(state.agents)) {\n            const agentPos = getAgentLocation(state, agentId)\n            const xTranslated = x - agentPos.x\n            const yTranslated = y - agentPos.y\n            const xRotated = xTranslated * Math.cos(-agentPos.angle) + yTranslated * Math.sin(-agentPos.angle)\n            const yRotated = -xTranslated * Math.sin(-agentPos.angle) + yTranslated * Math.cos(-agentPos.angle)\n\n            if (point_in_polygon(agent.shape, [xRotated, yRotated]) <= 0) {\n                return agentId\n            }\n        }\n\n        return null\n    }\n\n    function isDishMaskHovered(mouseX, mouseY) {\n        if (state.dishMask?.locked) return false\n        const { x: dishX, y: dishY, radius } = dishMaskLocation\n        const dist_sqr = (mouseX - dishX) ** 2 + (mouseY - dishY) ** 2\n        return dist_sqr > radius ** 2\n    }\n\n    function onCanvasMousedown(event) {\n        const { x, y } = eventToImageCoordinates(event)\n        if (isDishMaskHovered(x, y)) {\n            startDrag(x, y, DISH_MASK)\n            return\n        }\n\n        const hoveredAgent = getHoveredAgent(x, y)\n        if (hoveredAgent) {\n            dispatch({\n                type: 'set_active_agent',\n                activeAgent: hoveredAgent\n            })\n        }\n        startDrag(x, y, hoveredAgent ?? state.activeAgent)\n    }\n\n    function isDragging() {\n        return drag && (drag.agentId === state.activeAgent || drag.agentId === DISH_MASK)\n    }\n\n    function onCanvasMousemove(event) {\n        if (isDragging()) {\n            const xDelta = event.nativeEvent.offsetX * (canvas.height / canvas.clientHeight) - drag.mouse.x\n            const yDelta = event.nativeEvent.offsetY * (canvas.width / canvas.clientWidth) - drag.mouse.y\n\n            if (drag.agentId === DISH_MASK) {\n                dispatch({\n                    type: 'set_dish_mask_position',\n                    x: xDelta + drag.agent.x,\n                    y: yDelta + drag.agent.y,\n                })\n            } else {\n                dispatch({\n                    type: 'set_agent_position',\n                    agentId: drag.agentId,\n                    x: xDelta + drag.agent.x,\n                    y: yDelta + drag.agent.y,\n                })\n            }\n        }\n    }\n\n    function agentToScroll(x, y) {\n        // If dragging, rotate the agent being dragged. Otherwise, rotate the hovered agent (or dish). Otherwise,\n        // scroll the selected agent\n\n        if (isDragging()) return drag.agentId\n\n        if (isDishMaskHovered(x, y)) return DISH_MASK\n\n        return getHoveredAgent(x, y) ?? state.activeAgent\n    }\n\n    function onCanvasWheel(event) {\n        const { x, y } = eventToImageCoordinates(event)\n\n        const agentId = agentToScroll(x, y)\n\n        if (agentId === DISH_MASK) {\n            const { radius } = dishMaskLocation\n            dispatch({\n                type: 'set_dish_mask_radius',\n                radius: Math.max(10, radius + event.deltaY / (event.shiftKey ? 10 : 100)),\n            })\n        } else if (agentId) {\n            if (agentId !== state.activeAgent) {\n                dispatch({\n                    type: 'set_active_agent',\n                    activeAgent: agentId\n                })\n            }\n\n            dispatch({\n                type: 'rotate_agent',\n                agentId,\n                by: event.deltaY / (event.shiftKey ? 1000 : 10000),\n            })\n        }\n    }\n\n    return (<Col className=\"h-100 d-flex flex-column\">\n        <Toolbar sample={sample} state={state} returnToIndex={returnToIndex} save={save} />\n        <div className=\"labeler-canvas-container\">\n            <canvas\n                className=\"labeler-canvas\"\n                ref={setPreloadCanvas}\n                onMouseDown={onCanvasMousedown}\n                onMouseUp={endDrag}\n                onMouseMove={onCanvasMousemove}\n                onWheel={onCanvasWheel}\n            />\n            <Timeline sample={sample} state={state} />\n        </div>\n    </Col>)\n}","import { Button, Col, Form, FormCheck, Modal } from \"react-bootstrap\"\n\nimport agents from \"../agents.json\"\nimport { useCallback, useContext, useEffect, useState } from \"react\"\nimport { LabelsDispatch } from \"./labels\"\nimport color_convert from \"color-convert\"\nimport { BsPencilSquare } from \"react-icons/bs\"\nimport { RiDeleteBack2Fill } from \"react-icons/ri\"\n\nimport \"./Sidebar.css\"\nimport { getSrcForFrame } from \"./util\"\nimport { transform } from \"./VideoLabeler\"\n\nconst SCALE_FACTOR = 5\nconst PADDING = 500\n\nfunction AgentEditModal({ state, sample, agent: agentId, onClose }) {\n    const dispatch = useContext(LabelsDispatch)\n    const agent = agentId === null ? null : state.agents[agentId]\n\n    const [image, setImage] = useState(null)\n    const [preloadCanvas, setPreloadCanvas] = useState(null)\n    const [canvas, setCanvas] = useState(null)\n    const [hoveredPoint, setHoveredPoint] = useState(null)\n    const [draggingPoint, setDraggingPoint] = useState(null)\n\n    useEffect(() => {\n        dispatch({\n            type: 'set_modal',\n            value: agent !== null\n        })\n    }, [agent, dispatch])\n\n    // Much of this is copied almost directly from VideoLabeler\n    useEffect(() => {\n        const element = document.createElement('img')\n\n        function imageLoaded() {\n            setImage(element)\n        }\n\n        element.addEventListener('load', imageLoaded)\n        element.src = getSrcForFrame(sample.id, state.activeFrame)\n\n        // The element will be garbage collected as long as this event listener isn't around creating a cycle\n        return () => element.removeEventListener('load', imageLoaded)\n    }, [sample.id, state.activeFrame])\n\n    // Remember bounds while dragging\n    const [[top, bottom, left, right], setDimensions] = useState([NaN, NaN, NaN, NaN])\n    useEffect(() => {\n        console.log(\"effect\")\n        if (!agent) {\n            console.log(\"clearing dimensions\")\n            setDimensions([NaN, NaN, NaN, NaN])\n        } else if (draggingPoint === null) {\n            console.log(\"updating dimensions\")\n            const top = Math.min(...agent.shape.map(([_, y]) => y))\n            const bottom = Math.max(...agent.shape.map(([_, y]) => y))\n            const left = Math.min(...agent.shape.map(([x, _]) => x))\n            const right = Math.max(...agent.shape.map(([x, _]) => x))\n            setDimensions([top, bottom, left, right])\n        }\n    }, [agent, draggingPoint])\n\n    useEffect(() => {\n        if (preloadCanvas && image) {\n            preloadCanvas.width = image.naturalWidth\n            preloadCanvas.height = image.naturalHeight\n\n            preloadCanvas.getContext('2d').save()\n\n            setCanvas(preloadCanvas)\n        }\n    }, [preloadCanvas, image])\n\n    useEffect(() => {\n        if (!canvas) return\n        console.log(\"updating canvas size\")\n        canvas.width = (right - left) * SCALE_FACTOR + PADDING\n        canvas.height = (bottom - top) * SCALE_FACTOR + PADDING\n    }, [canvas, top, bottom, left, right, draggingPoint])\n\n    const getAgentLocation = useCallback(function (state, agentId) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        const agentLabel = state.frames[state.activeFrame]?.[agentId] ?? {}\n        const x = agentLabel.x ?? canvas.width / 2\n        const y = agentLabel.y ?? canvas.height / 2\n        const angle = agentLabel.angle ?? 0\n\n        return { x, y, angle }\n    }, [canvas])\n\n    const [mouseLocation, setMouseLocation] = useState(null)\n    useEffect(() => {\n        if (!agent) return\n        if (!canvas) return\n        if (!image) return\n\n        const ctx = canvas.getContext('2d')\n\n        const { x, y, angle } = getAgentLocation(state, agentId)\n        const agentTf = transform(x * SCALE_FACTOR, y * SCALE_FACTOR, angle, false).inverse()\n        const offsetTf = transform(canvas.width / 2, canvas.height / 2, 0, false)\n        ctx.setTransform(offsetTf.multiply(agentTf))\n        ctx.scale(SCALE_FACTOR, SCALE_FACTOR)\n\n        ctx.drawImage(image, 0, 0)\n\n        ctx.scale(1, 1)\n        ctx.lineWidth = 2\n\n        const [h, s, l] = color_convert.hex.hsl(agent.color.slice(1))\n\n        ctx.setTransform(1, 0, 0, 1, canvas.width / 2, canvas.height / 2)\n\n        // Draw lines and fill\n        ctx.strokeStyle = `hsla(${h}, ${s}%, ${l}%, 1)`\n        ctx.fillStyle = `hsla(${h}, ${s}%, ${l}%, 0.2)`\n        ctx.beginPath()\n        for (const [shapeX, shapeY] of agent.shape) {\n            ctx.lineTo(shapeX * SCALE_FACTOR, shapeY * SCALE_FACTOR)\n        }\n        ctx.stroke()\n        ctx.fill()\n\n        // Draw handles\n        ctx.fillStyle = `hsla(${h}, ${s}%, ${l * 0.5}%, 0.8)`\n        for (let i = 0; i < agent.shape.length; i++) {\n            const [shapeX, shapeY] = agent.shape[i]\n            ctx.beginPath()\n            if (i === hoveredPoint) {\n                ctx.strokeStyle = `#fff`\n                ctx.arc(shapeX * SCALE_FACTOR, shapeY * SCALE_FACTOR, 8, 0, 2 * Math.PI)\n            } else {\n                ctx.strokeStyle = `hsla(${h}, ${s}%, ${l * 0.5}%, 1)`\n                ctx.arc(shapeX * SCALE_FACTOR, shapeY * SCALE_FACTOR, 5, 0, 2 * Math.PI)\n            }\n            ctx.stroke()\n            ctx.fill()\n        }\n\n        // Draw mouse location\n        if (mouseLocation) {\n            ctx.strokeStyle = `#000`\n            ctx.fillStyle = `#000`\n            ctx.beginPath()\n            ctx.arc(mouseLocation.x, mouseLocation.y, 5, 0, 2 * Math.PI)\n            ctx.stroke()\n            ctx.fill()\n        }\n\n    }, [canvas, image, agentId, agent, getAgentLocation, state, hoveredPoint, mouseLocation])\n\n    const eventToScaledAgentCoordinates = useCallback(function eventToScaledAgentCoordinates(event) {\n        if (!canvas) throw new Error(\"Canvas ref was cleared\")\n\n        const x = event.nativeEvent.offsetX * (canvas.width / canvas.clientWidth) - canvas.width / 2\n        const y = event.nativeEvent.offsetY * (canvas.height / canvas.clientHeight) - canvas.height / 2\n\n        return { x, y }\n    }, [canvas])\n\n    const onMouseMove = useCallback(function onMouseMove(event) {\n        const { x, y }  = eventToScaledAgentCoordinates(event)\n        setMouseLocation({ x, y })\n\n        if (draggingPoint !== null) {\n            dispatch({\n                type: \"set_agent_shape\",\n                agent: agentId,\n                i: draggingPoint,\n                shapeX: x / SCALE_FACTOR,\n                shapeY: y / SCALE_FACTOR,\n            })\n        } else {\n            // this could be written better if it wasn't so late at night\n            let closest = null\n            for (let i = 0; i < agent.shape.length; i++) {\n                const [shapeX, shapeY] = agent.shape[i]\n                const dist = Math.sqrt(Math.pow(shapeX * SCALE_FACTOR - x, 2) + Math.pow(shapeY * SCALE_FACTOR - y, 2))\n                if (closest === null || closest.dist > dist) {\n                    closest = { dist, i }\n                }\n            }\n            if (closest === null || closest.dist > 15) {\n                setHoveredPoint(null)\n            } else {\n                setHoveredPoint(closest.i)\n            }\n\n        }\n    }, [eventToScaledAgentCoordinates, agentId, agent, draggingPoint, dispatch])\n\n    function onChangeDisplayName(event) {\n        dispatch({\n            type: 'set_agent_display_name',\n            agent: agentId,\n            display_name: event.currentTarget.value\n        })\n    }\n\n    return (\n            <Modal show={agentId !== null} onHide={onClose} size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Agent</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        {agent && <Form.Group className=\"mb-3\" controlId=\"agentName\">\n                            <Form.Label>Agent Name</Form.Label>\n                            <Form.Control type=\"text\" value={agent.display_name} onChange={onChangeDisplayName} />\n                        </Form.Group>}\n\n                        <Form.Group className=\"mb-3\" controlId=\"agentShape\">\n                            <Form.Label>Edit agent shape. This affects all frames of this video. If this frame doesn't give a clear view,\n                                you can advance to another frame and Edit again.</Form.Label>\n                        </Form.Group>\n                    </Form>\n\n                    <canvas\n                            style={{ cursor: hoveredPoint === null ? \"auto\" : \"grab\" }}\n                            className=\"agent-edit-canvas w-100\"\n                            ref={setPreloadCanvas}\n                            onMouseMove={onMouseMove}\n                            onMouseDown={() => { setDraggingPoint(hoveredPoint) }}\n                            onMouseUp={() => { setDraggingPoint(null) }}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={onClose}>\n                        Done\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n    )\n}\n\nfunction SidebarAgentsPresent({ state, sample }) {\n    const dispatch = useContext(LabelsDispatch)\n    const [agentToAdd, setAgentToAdd] = useState(\"\")\n    const [editingAgent, setEditingAgent] = useState(null)\n    if (!dispatch) return null\n\n    function addAgent(agentName) {\n      const existing_agent = agents.find(agent => agent.name === agentName)\n      if (existing_agent) {\n        dispatch({\n          type: 'add_agent',\n          agent: {\n            ...existing_agent,\n            color: \"#\" + color_convert.hsv.hex(Math.random() * 360, 100, 100)\n          }\n        })\n        setAgentToAdd(\"\")\n      }\n    }\n\n    return <div>\n        <h4 className=\"text-center mt-3\">Agents Present</h4>\n        <p className=\"small text-secondary text-center\">Applies to the entire video</p>\n\n        <ol className=\"list-unstyled m-3\">\n            {Object.entries(state.agents).map(([id, agent]) => (\n                <SidebarAgent\n                    key={id}\n                    agent={agent}\n                    onColorChange={color => dispatch({ type: 'set_agent_color', agent: id, color })}\n                    onClickEdit={_ => setEditingAgent(id)}\n                    onClickDelete={_ => dispatch({ type: 'delete_agent', agent: id })}\n                />\n            ))}\n        </ol>\n\n      <div className=\"input-group px-2 pb-3\">\n        {/*<Form.Control*/}\n        {/*  type=\"color\"*/}\n        {/*  id=\"new-agent-color\"*/}\n        {/*  defaultValue=\"#563d7c\"*/}\n        {/*  title=\"Agent color\"*/}\n        {/*  style={{ flexGrow: 0, width: \"2.5em\"}}*/}\n        {/*/>*/}\n        <Form.Select\n          aria-label=\"Agent Type\"\n          value={agentToAdd}\n          onChange={e => setAgentToAdd(e.currentTarget.value)}\n        >\n          <option key={\"\"} value={\"\"}>Agent Type&hellip;</option>\n          {agents.map(agent => (\n            <option key={agent.name} value={agent.name}>\n              {agent.display_name}\n            </option>\n          ))}\n        </Form.Select>\n        <Button variant=\"primary\" onClick={_ => addAgent(agentToAdd)} disabled={!agentToAdd}>Add</Button>\n      </div>\n      <AgentEditModal\n              state={state}\n              sample={sample}\n              agent={editingAgent}\n              onClose={_ => setEditingAgent(null)} />\n    </div>\n}\n\nfunction SidebarAgent({ agent, onClickEdit, onClickDelete, onColorChange }) {\n    return (<li className=\"d-flex align-items-center\">\n      <Form.Control\n        type=\"color\"\n        size=\"sm\"\n        className=\"agent-color\"\n        value={agent.color}\n        onChange={e => onColorChange(e.currentTarget.value)}\n        title=\"Agent color\"\n      />\n      <span className=\"flex-grow-1 flex-truncate-text\">{agent.display_name}</span>\n      <Button className=\"icon-button\" size=\"sm\" variant=\"light\" onClick={_ => onClickDelete()}><RiDeleteBack2Fill /></Button>\n      <Button className=\"icon-button\" size=\"sm\" variant=\"light\" onClick={_ => onClickEdit()}><BsPencilSquare /></Button>\n    </li>)\n}\n\nfunction SidebarAgentAnnotation({ state, agentId, agent, label }) {\n    const dispatch = useContext(LabelsDispatch)\n    if (!dispatch) return null\n\n    return <li\n        className={\"list-group-item py-2 px-3 \" + (state.activeAgent === agentId ? 'active' : '')}\n        onClick={() => dispatch({ type: 'set_active_agent', activeAgent: agentId })}\n    >\n        {agent.display_name}\n        <Form>\n            <FormCheck\n                id={`agent-${agentId}-blurred`}\n                label={\"Blurred\"}\n                checked={label?.isBlurred ?? false}\n                onChange={event => dispatch({\n                    type: 'set_agent_is_blurred',\n                    agentId,\n                    isBlurred: event.currentTarget.checked\n                })}\n            />\n            <FormCheck\n                id={`agent-${agent.name}-obscured`}\n                label={\"Obscured\"}\n                checked={label?.isObscured ?? false}\n                onChange={event => dispatch({\n                    type: 'set_agent_is_obscured',\n                    agentId,\n                    isObscured: event.currentTarget.checked\n                })}\n            />\n        </Form>\n    </li>\n}\n\nfunction SidebarAgentAnnotations({ state }) {\n    return <div className=\"flex-grow-1\">\n        <h4 className=\"text-center mt-3\">Agent Annotations</h4>\n        <p className=\"small text-secondary text-center\">Applies to the current frame</p>\n\n        <ul className=\"list-group list-group-flush\">\n            {Object.entries(state.agents).map(([agentId, agent]) =>\n                <SidebarAgentAnnotation\n                    key={agentId}\n                    state={state}\n                    agentId={agentId}\n                    agent={agent}\n                    label={state.frames?.[state.activeFrame]?.[agentId]}\n                />\n            )}\n        </ul>\n        {Object.keys(state.agents).length === 0 && <p className=\"text-center mx-2\">\n            Use the dropdown and button below to add the agent that are present in this video\n        </p>}\n    </div>\n}\n\nexport function Sidebar({ state, sample }) {\n\n    return (<Col md={4} lg={3} xl={2} className=\"bg-light h-100 border-end border-dark d-flex flex-column gx-0\">\n        <SidebarAgentAnnotations state={state} />\n        <SidebarAgentsPresent state={state} sample={sample} />\n    </Col>)\n}","function updateFrame(state, agent, changes) {\n    if (!agent) return state\n    if (typeof changes === \"function\") {\n        changes = changes(state.frames[state.activeFrame]?.[agent] ?? {})\n    }\n    return {\n        ...state,\n        frames: {\n            ...state.frames,\n            [state.activeFrame]: {\n                ...state.frames[state.activeFrame],\n                [agent]: {\n                    ...state.frames[state.activeFrame]?.[agent] ?? {},\n                    ...changes,\n                },\n            },\n        },\n    }\n}\n\nfunction normalizeAngle(angle) {\n    return angle % (Math.PI * 2)\n}\n\nfunction stepAdvanceDispatch(state) {\n    const presentAgentIds = Object.keys(state.agents).sort()\n\n    const idx = presentAgentIds.indexOf(state.activeAgent)\n\n    // First, if there is no active agent, try to activate the first present agent\n    if (!state.activeAgent || idx < 0) {\n        if (presentAgentIds.length > 0) {\n            return { type: 'set_active_agent', activeAgent: presentAgentIds[0] }\n        } else {\n            // If there aren't any present agents, just go to the next frame\n            return { type: 'next_frame' }\n        }\n    }\n\n    // Try to activate the next present agent\n    if (idx + 1 < presentAgentIds.length) {\n        return { type: 'set_active_agent', activeAgent: presentAgentIds[idx + 1] }\n    }\n\n    // If nothing else worked, advance the frame and reset the agent\n    return { type: 'advance_frame_and_set_agent', activeAgent: presentAgentIds[0] }\n}\n\nfunction stepRetreatDispatch(state) {\n    const presentAgentIds = Object.keys(state.agents).sort().reverse()\n\n    const idx = presentAgentIds.indexOf(state.activeAgent)\n\n    // First, if there is no active agent, try to activate the first present agent\n    if (!state.activeAgent || idx < 0) {\n        if (presentAgentIds.length > 0) {\n            return { type: 'set_active_agent', activeAgent: presentAgentIds[0] }\n        } else {\n            // If there aren't any present agents, just go to the previous frame\n            return { type: 'previous_frame' }\n        }\n    }\n\n    // Try to activate the next present agent\n    if (idx + 1 < presentAgentIds.length) {\n        return { type: 'set_active_agent', activeAgent: presentAgentIds[idx + 1] }\n    }\n\n    // If nothing else worked, advance the frame and reset the agent\n    return { type: 'retreat_frame_and_set_agent', activeAgent: presentAgentIds[0] }\n}\n\nfunction clampFrame(settings, frameNum) {\n    // convert to 0-indexed for math\n    frameNum -= 1\n    // clamp to existing frames\n    frameNum = Math.max(0, Math.min(frameNum, settings.numFrames - 1))\n    // round to the sample rate\n    frameNum = Math.round(frameNum / settings.sampleRate) * settings.sampleRate\n    // convert back to 1-indexed\n    frameNum += 1\n    return frameNum\n}\n\nexport default function reducer(state, action) {\n    // The only action that can be performed before initial state is received is to receive the initial state\n    if (!state.settings && action.type !== 'set_state') {\n        console.warn(\"Received\", action.type, \"action before initial state from server\")\n        return state\n    }\n\n    switch (action.type) {\n        case 'set_state':\n            return action.state\n        case 'set_loading_finished':\n            return { ...state, loading: false }\n        case 'set_saving':\n            return { ...state, saving: action.value }\n        case 'set_active_agent':\n            return { ...state, activeAgent: action.activeAgent }\n        case 'set_agent_present':\n            return { ...state, agentPresent: { ...state.agentPresent, [action.agent]: action.isPresent } }\n        case 'set_agent_flipped':\n            return { ...state, agentFlipped: { ...state.agentFlipped, [action.agent]: action.isFlipped } }\n        case 'active_agent_toggle_present':\n            return {\n                ...state,\n                agentPresent: { ...state.agentPresent, [state.activeAgent]: !state.agentPresent[state.activeAgent] },\n            }\n        case 'set_agent_position':\n            return updateFrame(state, action.agentId, { x: action.x, y: action.y })\n        case 'rotate_agent':\n            return updateFrame(state, action.agentId, agent => ({\n                angle: normalizeAngle((agent.angle || 0) + action.by),\n            }))\n        case 'rotate_active_agent':\n            return reducer(state, { type: 'rotate_agent', agentId: state.activeAgent, by: action.by })\n        case 'move_agent':\n            return updateFrame(state, action.agentId, agent => ({\n                x: (agent.x || 0) + (action.x || 0),\n                y: (agent.y || 0) + (action.y || 0),\n            }))\n        case 'move_active_agent':\n            return reducer(state, { type: 'move_agent', agentId: state.activeAgent, x: action.x, y: action.y })\n        case 'next_frame':\n            if (state.loading) return state\n            const prevActiveFrame = state.activeFrame\n            const activeFrame = clampFrame(state.settings, state.activeFrame + state.settings.sampleRate)\n            return {\n                ...state,\n                loading: true,\n                activeFrame,\n                frames: {\n                    ...state.frames,\n                    [activeFrame]: state.frames[activeFrame] ?? state.frames[prevActiveFrame],\n                },\n            }\n        case 'previous_frame':\n            return {\n                ...state,\n                loading: true,\n                activeFrame: clampFrame(state.settings, state.activeFrame - state.settings.sampleRate),\n            }\n        case 'jump_to_frame':\n            return {\n                ...state,\n                loading: true,\n                activeFrame: clampFrame(state.settings, action.frame),\n            }\n        case 'set_agent_is_blurred':\n            return updateFrame(state, action.agentId, { isBlurred: action.isBlurred })\n        case 'toggle_active_agent_is_blurred':\n            return updateFrame(state, state.activeAgent, current => ({ isBlurred: !current.isBlurred }))\n        case 'set_agent_is_obscured':\n            return updateFrame(state, action.agentId, { isObscured: action.isObscured })\n        case 'toggle_active_agent_is_obscured':\n            return updateFrame(state, state.activeAgent, current => ({ isObscured: !current.isObscured }))\n        case 'step_advance':\n            return reducer(state, stepAdvanceDispatch(state))\n        case 'step_retreat':\n            return reducer(state, stepRetreatDispatch(state))\n        case 'advance_frame_and_set_agent':\n            if (state.loading) return state\n            return reducer(\n                    reducer(state, { type: 'next_frame' }),\n                    { type: 'set_active_agent', activeAgent: action.activeAgent })\n        case 'retreat_frame_and_set_agent':\n            if (state.loading) return state\n            return reducer(\n                    reducer(state, { type: 'previous_frame' }),\n                    { type: 'set_active_agent', activeAgent: action.activeAgent })\n        case 'set_dish_mask_position':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    x: action.x,\n                    y: action.y,\n                },\n            }\n        case 'set_dish_mask_radius':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    radius: action.radius,\n                },\n            }\n        case 'reset_dish_mask':\n            return {\n                ...state,\n                dishMask: null,\n            }\n\n        case 'set_dish_mask_locked':\n            return {\n                ...state,\n                dishMask: {\n                    ...state.dishMask,\n                    locked: action.value,\n                },\n            }\n\n        case 'add_agent':\n            return {\n                ...state,\n                agents: {\n                    ...state.agents,\n                    [state.nextAgentId]: action.agent,\n                },\n                nextAgentId: state.nextAgentId + 1,\n            }\n\n        case 'set_agent_color':\n            return {\n                ...state,\n                agents: Object.fromEntries(\n                        Object.entries(state.agents)\n                                .map(([id, agent]) => [id, id === action.agent ? {\n                                    ...agent,\n                                    color: action.color,\n                                } : agent]),\n                ),\n            }\n\n        case 'delete_agent':\n            return {\n                ...state,\n                agents: Object.fromEntries(\n                        Object.entries(state.agents)\n                                .filter(([id, _]) => id !== action.agent),\n                ),\n            }\n\n        case 'set_agent_shape':\n            return {\n                ...state,\n                agents: Object.fromEntries(\n                        Object.entries(state.agents)\n                                .map(([id, agent]) => [id, id === action.agent ? {\n                                    ...agent,\n                                    shape: agent.shape.map((shape, i) => {\n                                        // Ensure the last and first points are always the same\n                                        const shouldChange = (i === action.i) ||\n                                                (i === 0 && action.i === agent.shape.length - 1) ||\n                                                (i === agent.shape.length - 1 && action.i === 0)\n                                        return shouldChange ? [action.shapeX, action.shapeY] : shape\n                                    }),\n                                } : agent]),\n                ),\n            }\n\n        case 'set_agent_display_name':\n            return {\n                ...state,\n                agents: Object.fromEntries(\n                        Object.entries(state.agents)\n                                .map(([id, agent]) => [id, id === action.agent ? {\n                                    ...agent,\n                                    display_name: action.display_name,\n                                } : agent]),\n                ),\n            }\n\n        case 'set_modal':\n            return {\n                ...state,\n                modal: action.value\n            }\n\n        default:\n            throw new Error(\"Unknown reducer action\")\n    }\n}","import { useEffect, useMemo, useReducer, useState } from \"react\"\nimport { Container, Row, Toast, ToastContainer } from \"react-bootstrap\"\nimport { Sidebar } from \"./Sidebar\"\nimport { VideoLabeler } from \"./VideoLabeler\"\nimport reducer from \"../reducer\"\nimport { LabelsDispatch } from \"./labels\"\nimport { apiBaseUrl } from \"./util\"\n\n// note only keys listed in save_state below are persisted to the server\nconst defaultState = {\n    settings: null,\n    loading: true,\n    saving: false,\n    modal: false,\n    activeFrame: 1,\n    activeAgent: null,\n    agentPresent: {},\n    agents: {},\n    nextAgentId: 0,\n    frames: {},\n}\n\nconst NO_MATCH = Symbol(\"NO_MATCH\")\n\nexport default function Labeler() {\n    const [state, dispatch] = useReducer(reducer, defaultState, i => i)\n\n    const [sample, setSample] = useState(null)\n    const [saveError, setSaveError] = useState(null)\n    const [saveSuccessMessage, setSaveSuccessMessage] = useState(null)\n\n    // This is a hack to get an effect to run because I'm tired\n    const [saveRequests, setSaveRequests] = useState(0)\n    // Ok that one above was kinda bad but this is REALLY bad. I'm using object identity as a part of the logic.\n    const [performingRequestedSave, setPerformingRequestedSave] = useState([false])\n\n    const experimentId = useMemo(() => {\n        return new URL(window.location).searchParams.get(\"experiment_id\")\n    }, [])\n\n    useEffect(() => {\n        const controller = new AbortController()\n        const signal = controller.signal\n        fetch(`${apiBaseUrl}/api/experiment?id=${experimentId}`, { signal })\n                .then(response => response.json())\n                .then(sample => {\n                    if (signal.aborted) {\n                        console.log(\"State restoration aborted after fetch finished\")\n                        return\n                    }\n                    setSample(sample)\n\n                    const state = { ...defaultState, ...sample.label }\n                    // Have to do this weird inversion of object structure to get settings into redux\n                    delete sample.label\n                    state.settings = sample\n\n                    dispatch({ type: 'set_state', state })\n                })\n                .catch(err => {\n                    // AbortError is for intentional aborts using AbortController, so no handling is needed\n                    if (err.name === 'AbortError') return\n\n                    alert(`Failed to fetch experiment: ${err}`)\n                })\n\n        return () => controller.abort()\n    }, [experimentId])\n\n    useEffect(() => {\n        function listener(event) {\n            const ret = (() => {\n                switch (event.key) {\n                        // Changing frames\n                    case ' ':\n                        return dispatch({ type: 'step_advance' })\n                    case 'b':\n                        return dispatch({ type: 'step_retreat' })\n\n                        // Setting quality\n                    case 'r':\n                        return dispatch({ type: 'toggle_active_agent_is_blurred' })\n                    case 'f':\n                        return dispatch({ type: 'toggle_active_agent_is_obscured' })\n\n                        // Rotating\n                    case 'q':\n                        return dispatch({ type: 'rotate_active_agent', by: 0.01 })\n                    case 'Q':\n                        return dispatch({ type: 'rotate_active_agent', by: 0.1 })\n                    case 'e':\n                        return dispatch({ type: 'rotate_active_agent', by: -0.01 })\n                    case 'E':\n                        return dispatch({ type: 'rotate_active_agent', by: -0.1 })\n\n                        // Translating\n                    case 'w':\n                        return dispatch({ type: 'move_active_agent', y: -1 })\n                    case 'W':\n                        return dispatch({ type: 'move_active_agent', y: -10 })\n                    case 'a':\n                        return dispatch({ type: 'move_active_agent', x: -1 })\n                    case 'A':\n                        return dispatch({ type: 'move_active_agent', x: -10 })\n                    case 's':\n                        return dispatch({ type: 'move_active_agent', y: 1 })\n                    case 'S':\n                        return dispatch({ type: 'move_active_agent', y: 10 })\n                    case 'd':\n                        return dispatch({ type: 'move_active_agent', x: 1 })\n                    case 'D':\n                        return dispatch({ type: 'move_active_agent', x: 10 })\n\n                    default:\n                        break\n                }\n                return NO_MATCH\n            })()\n            if (ret !== NO_MATCH) event.preventDefault()\n            return ret\n        }\n\n        // useEffect's clean up makes this pretty easy\n        if (!state.modal) {\n            document.addEventListener('keypress', listener)\n            return () => document.removeEventListener('keypress', listener)\n        }\n    }, [state.modal])\n\n    // Save on every frame change and when requested by the user\n    const hasSample = !!sample\n    useEffect(() => {\n        if (!hasSample || !state.settings) return\n        dispatch({ type: \"set_saving\", value: true })\n        const save_state = Object.fromEntries(\n                [\"activeFrame\", \"activeAgent\", \"agentPresent\", \"agents\", \"frames\", \"nextAgentId\", \"dishMask\"]\n                        .map(key => [key, state[key]]),\n        )\n        fetch(`${apiBaseUrl}/api/set_label?id=${experimentId}`, {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: JSON.stringify(save_state),\n        })\n                .then(response => {\n                    switch (response.status) {\n                        case 200:\n                            if (performingRequestedSave[0]) {\n                                setPerformingRequestedSave(arr => { arr[0] = false; return arr; })\n                                setSaveSuccessMessage(\"Saved\")\n                                setSaveError(null)\n                            }\n                            break\n                        case 401:\n                            setSaveError(\"Save failed because you are unauthorized. Try making sure you are \" +\n                                    \"logged in at \" + window.location.origin + \" using a new tab and check that you \" +\n                                    \"are assigned to this experiment. If you close this tab, your changes may be lost.\")\n                            break\n                        default:\n                            setSaveError(`Save failed! ${response.statusText}. If you close this window, your ` +\n                                    `progress will be lost`)\n                    }\n                }, err => {\n                    if (err.message === \"Failed to fetch\") {\n                        setSaveError(\"Save failed: Could not connect to server. Check that you are connected \" +\n                                \"to the Internet and then contact your administrator. If you close this tab, your \" +\n                                \"changes will be lost.\")\n                    } else {\n                        setSaveError(`Save failed! ${err.message}. If you close this window, your ` +\n                                `progress will be lost`)\n                    }\n                })\n                .then(() => {\n                    dispatch({ type: \"set_saving\", value: false })\n                })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hasSample, state.activeFrame, experimentId, saveRequests, performingRequestedSave])\n\n    function returnToIndex() {\n        window.location = `${apiBaseUrl}/`\n    }\n\n    function save() {\n        setPerformingRequestedSave(arr => { arr[0] = true; return arr; })\n        setSaveRequests(n => n + 1)\n    }\n\n    if (!sample) return (<p>Loading&hellip;</p>)\n\n    return (<>\n        <Container fluid className=\"h-100\">\n            <Row className=\"h-100\">\n                <LabelsDispatch.Provider value={dispatch}>\n                    <Sidebar state={state} sample={sample} />\n                    <VideoLabeler sample={sample} state={state} returnToIndex={returnToIndex} save={save} />\n                </LabelsDispatch.Provider>\n            </Row>\n        </Container>\n        <ToastContainer position=\"bottom-end\" className=\"p-3\">\n            <Toast onClose={() => setSaveError(null)} show={saveError !== null}>\n                <Toast.Header>\n                    <strong>Save error</strong>\n                </Toast.Header>\n                <Toast.Body>{saveError}</Toast.Body>\n            </Toast>\n            <Toast onClose={() => setSaveSuccessMessage(null)} show={saveSuccessMessage !== null} delay={3000} autohide>\n                <Toast.Header>\n                    <strong>Saved!</strong>\n                </Toast.Header>\n                <Toast.Body>{saveSuccessMessage}</Toast.Body>\n            </Toast>\n        </ToastContainer>\n    </>)\n}","import Labeler from \"./components/Labeler\"\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Labeler />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}